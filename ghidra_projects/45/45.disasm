ENDBR64
SUB RSP,0x8
MOV RAX,qword ptr [0x00105fe8]
TEST RAX,RAX
JZ 0x00101016
CALL RAX
ADD RSP,0x8
RET
PUSH qword ptr [0x00105f28]
JMP qword ptr [0x00105f30]
ENDBR64
PUSH 0x0
JMP 0x00101020
NOP
ENDBR64
PUSH 0x1
JMP 0x00101020
NOP
ENDBR64
PUSH 0x2
JMP 0x00101020
NOP
ENDBR64
PUSH 0x3
JMP 0x00101020
NOP
ENDBR64
PUSH 0x4
JMP 0x00101020
NOP
ENDBR64
PUSH 0x5
JMP 0x00101020
NOP
ENDBR64
PUSH 0x6
JMP 0x00101020
NOP
ENDBR64
PUSH 0x7
JMP 0x00101020
NOP
ENDBR64
PUSH 0x8
JMP 0x00101020
NOP
ENDBR64
PUSH 0x9
JMP 0x00101020
NOP
ENDBR64
PUSH 0xa
JMP 0x00101020
NOP
ENDBR64
PUSH 0xb
JMP 0x00101020
NOP
ENDBR64
PUSH 0xc
JMP 0x00101020
NOP
ENDBR64
PUSH 0xd
JMP 0x00101020
NOP
ENDBR64
PUSH 0xe
JMP 0x00101020
NOP
ENDBR64
PUSH 0xf
JMP 0x00101020
NOP
ENDBR64
PUSH 0x10
JMP 0x00101020
NOP
ENDBR64
PUSH 0x11
JMP 0x00101020
NOP
ENDBR64
JMP qword ptr [0x00105fc8]
ENDBR64
JMP qword ptr [0x00105f38]
ENDBR64
JMP qword ptr [0x00105f40]
ENDBR64
JMP qword ptr [0x00105f48]
ENDBR64
JMP qword ptr [0x00105f50]
ENDBR64
JMP qword ptr [0x00105f58]
ENDBR64
JMP qword ptr [0x00105f60]
ENDBR64
JMP qword ptr [0x00105f68]
ENDBR64
JMP qword ptr [0x00105f70]
ENDBR64
JMP qword ptr [0x00105f78]
ENDBR64
JMP qword ptr [0x00105f80]
ENDBR64
JMP qword ptr [0x00105f88]
ENDBR64
JMP qword ptr [0x00105f90]
ENDBR64
JMP qword ptr [0x00105f98]
ENDBR64
JMP qword ptr [0x00105fa0]
ENDBR64
JMP qword ptr [0x00105fa8]
ENDBR64
JMP qword ptr [0x00105fb0]
ENDBR64
JMP qword ptr [0x00105fb8]
ENDBR64
JMP qword ptr [0x00105fc0]
ENDBR64
XOR EBP,EBP
MOV R9,RDX
POP RSI
MOV RDX,RSP
AND RSP,-0x10
PUSH RAX
PUSH RSP
XOR R8D,R8D
XOR ECX,ECX
LEA RDI,[0x101369]
CALL qword ptr [0x00105fd8]
HLT
LEA RDI,[0x106018]
LEA RAX,[0x106018]
CMP RAX,RDI
JZ 0x001012d8
MOV RAX,qword ptr [0x00105fe0]
TEST RAX,RAX
JZ 0x001012d8
JMP RAX
RET
LEA RDI,[0x106018]
LEA RSI,[0x106018]
SUB RSI,RDI
MOV RAX,RSI
SHR RSI,0x3f
SAR RAX,0x3
ADD RSI,RAX
SAR RSI,0x1
JZ 0x00101318
MOV RAX,qword ptr [0x00105ff0]
TEST RAX,RAX
JZ 0x00101318
JMP RAX
RET
ENDBR64
CMP byte ptr [0x00106278],0x0
JNZ 0x00101358
PUSH RBP
CMP qword ptr [0x00105fc8],0x0
MOV RBP,RSP
JZ 0x00101347
MOV RDI,qword ptr [0x00106008]
CALL 0x00101150
CALL 0x001012b0
MOV byte ptr [0x00106278],0x1
POP RBP
RET
RET
ENDBR64
JMP 0x001012e0
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x78
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x001015e8
LEA RAX,[0x103008]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011d0
LEA RAX,[RBP + -0x78]
MOV RSI,RAX
LEA RAX,[0x106160]
MOV RDI,RAX
CALL 0x001011a0
LEA RAX,[0x103018]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011d0
MOV RDX,qword ptr [0x00105fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101200
JMP 0x0010141f
LEA RAX,[RBP + -0x74]
MOV RSI,RAX
LEA RAX,[0x106160]
MOV RDI,RAX
CALL 0x001011a0
LEA RDX,[RBP + -0x74]
LEA RAX,[RBP + -0x70]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001016ee
MOV EAX,dword ptr [RBP + -0x78]
SUB EAX,0x1
MOV dword ptr [RBP + -0x78],EAX
MOV EAX,dword ptr [RBP + -0x78]
TEST EAX,EAX
JNZ 0x001013ed
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x00101718
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x00101160
MOV RDX,qword ptr [0x00105fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101200
JMP 0x00101495
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x00101754
MOV EAX,dword ptr [RAX]
MOV ESI,EAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x00101260
MOV RDX,qword ptr [0x00105fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101200
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x00101772
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x00101736
XOR EAX,0x1
TEST AL,AL
JNZ 0x00101458
MOV EBX,0x0
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x001015a8
MOV EAX,EBX
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001014ef
JMP 0x001014ea
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x001015a8
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101270
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],EDI
MOV dword ptr [RBP + -0x8],ESI
CMP dword ptr [RBP + -0x4],0x1
JNZ 0x00101548
CMP dword ptr [RBP + -0x8],0xffff
JNZ 0x00101548
LEA RAX,[0x106279]
MOV RDI,RAX
CALL 0x00101230
LEA RAX,[0x106008]
MOV RDX,RAX
LEA RAX,[0x106279]
MOV RSI,RAX
MOV RAX,qword ptr [0x00105ff8]
MOV RDI,RAX
CALL 0x001011c0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV ESI,0xffff
MOV EDI,0x1
CALL 0x001014f5
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
CMP qword ptr [RBP + -0x8],0x1ff
JA 0x001015a0
MOV EAX,0x200
MOV EDX,0x0
DIV qword ptr [RBP + -0x8]
JMP 0x001015a5
MOV EAX,0x1
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010165a
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001017b2
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
MOV qword ptr [RAX + 0x8],0x0
MOV qword ptr [RAX + 0x10],0x0
MOV qword ptr [RAX + 0x18],0x0
MOV qword ptr [RAX + 0x20],0x0
MOV qword ptr [RAX + 0x28],0x0
MOV qword ptr [RAX + 0x30],0x0
MOV qword ptr [RAX + 0x38],0x0
MOV qword ptr [RAX + 0x40],0x0
MOV qword ptr [RAX + 0x48],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001015c8
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x68
MOV qword ptr [RBP + -0x68],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x68]
MOV RDI,RAX
CALL 0x001018d6
MOV RBX,RAX
LEA RAX,[RBP + -0x40]
MOV RDX,qword ptr [RBP + -0x68]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018a4
LEA RAX,[RBP + -0x60]
MOV RDX,qword ptr [RBP + -0x68]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101872
LEA RDX,[RBP + -0x40]
LEA RSI,[RBP + -0x60]
MOV RAX,qword ptr [RBP + -0x68]
MOV RCX,RBX
MOV RDI,RAX
CALL 0x001018e8
MOV RAX,qword ptr [RBP + -0x68]
MOV RDI,RAX
CALL 0x00101806
NOP
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x001016e7
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010192a
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010199e
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001019cc
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001019fa
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a5a
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101af4
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101ac8
MOV RAX,qword ptr [RBP + -0x18]
MOV ESI,0x0
MOV RDI,RAX
CALL 0x00101b14
JMP 0x00101800
ENDBR64
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101792
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101270
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
TEST RAX,RAX
JZ 0x00101863
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x48]
LEA RDX,[RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX + 0x28]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101cec
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101d38
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101792
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
LEA RDX,[RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101dac
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
LEA RDX,[RAX + 0x30]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101dac
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x50
MOV qword ptr [RBP + -0x38],RDI
MOV qword ptr [RBP + -0x40],RSI
MOV qword ptr [RBP + -0x48],RDX
MOV qword ptr [RBP + -0x50],RCX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
NOP
MOV RAX,qword ptr [RBP + -0x8]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00101928
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x30]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x40]
SUB RAX,0x4
CMP RDX,RAX
JZ 0x00101988
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX + 0x30]
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101dfd
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x30]
LEA RDX,[RAX + 0x4]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x30],RDX
JMP 0x0010199b
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101e3a
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
LEA RDX,[RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
ADD RAX,0x30
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101f0b
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
LEA RDX,[RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
ADD RAX,0x30
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101f9d
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x40
MOV qword ptr [RBP + -0x38],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x30]
MOV RDX,qword ptr [RBP + -0x38]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018a4
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x00101fc4
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x0010202a
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101a58
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RAX + 0x30]
MOV RAX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RAX + 0x38]
CMP RDX,RAX
JZ 0x00101ab5
MOV RAX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RAX + 0x30]
LEA RDX,[RAX + -0x4]
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RAX + 0x30],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RBX,qword ptr [RAX + 0x30]
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001018d6
MOV RSI,RBX
MOV RDI,RAX
CALL 0x0010203f
JMP 0x00101ac1
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x0010206a
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001020ec
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010210c
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102156
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x48
MOV qword ptr [RBP + -0x48],RDI
MOV qword ptr [RBP + -0x50],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV EDI,0x4
CALL 0x0010157a
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x50]
MOV EDX,0x0
DIV RBX
ADD RAX,0x1
MOV qword ptr [RBP + -0x30],RAX
MOV RAX,qword ptr [RBP + -0x30]
ADD RAX,0x2
MOV qword ptr [RBP + -0x38],RAX
MOV qword ptr [RBP + -0x40],0x8
LEA RDX,[RBP + -0x38]
LEA RAX,[RBP + -0x40]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102165
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x48]
MOV qword ptr [RAX + 0x8],RDX
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102194
MOV RDX,qword ptr [RBP + -0x48]
MOV qword ptr [RDX],RAX
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x8]
SUB RAX,qword ptr [RBP + -0x30]
SHR RAX,0x1
SHL RAX,0x3
ADD RAX,RDX
MOV qword ptr [RBP + -0x28],RAX
MOV RAX,qword ptr [RBP + -0x30]
LEA RDX,[RAX*0x8]
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,RDX
MOV qword ptr [RBP + -0x20],RAX
MOV RDX,qword ptr [RBP + -0x20]
MOV RCX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x48]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010222c
MOV RAX,qword ptr [RBP + -0x48]
LEA RDX,[RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x28]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001022b8
MOV RAX,qword ptr [RBP + -0x48]
ADD RAX,0x30
MOV RDX,qword ptr [RBP + -0x20]
SUB RDX,0x8
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001022b8
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RAX + 0x18]
MOV RAX,qword ptr [RBP + -0x48]
MOV qword ptr [RAX + 0x10],RDX
MOV RAX,qword ptr [RBP + -0x48]
MOV RBX,qword ptr [RAX + 0x38]
MOV EDI,0x4
CALL 0x0010157a
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x50]
MOV EDX,0x0
DIV RCX
MOV RCX,RDX
MOV RAX,RCX
SHL RAX,0x2
LEA RDX,[RBX + RAX*0x1]
MOV RAX,qword ptr [RBP + -0x48]
MOV qword ptr [RAX + 0x30],RDX
NOP
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00101ce5
JMP 0x00101ce0
ENDBR64
MOV RDI,RAX
CALL 0x00101180
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x48]
MOV RCX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x48]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101d38
MOV RAX,qword ptr [RBP + -0x48]
MOV qword ptr [RAX],0x0
MOV RAX,qword ptr [RBP + -0x48]
MOV qword ptr [RAX + 0x8],0x0
CALL 0x00101220
ENDBR64
MOV RBX,RAX
CALL 0x00101250
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101270
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
MOV qword ptr [RBP + -0x8],RAX
JMP 0x00101d29
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010230c
ADD qword ptr [RBP + -0x8],0x8
MOV RAX,qword ptr [RBP + -0x8]
CMP RAX,qword ptr [RBP + -0x28]
JC 0x00101d0e
NOP
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x9]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102344
MOV RDX,qword ptr [RBP + -0x28]
MOV RCX,qword ptr [RBP + -0x20]
LEA RAX,[RBP + -0x9]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010239b
LEA RAX,[RBP + -0x9]
MOV RDI,RAX
CALL 0x0010237c
MOV RAX,qword ptr [RBP + -0x8]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00101da9
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],RDX
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x10],RDX
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX + 0x18]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x18],RDX
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001023cd
MOV RDX,RAX
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001023e0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x0010199e
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102422
CMP RBX,RAX
SETZ AL
TEST AL,AL
JZ 0x00101e83
LEA RAX,[0x103040]
MOV RDI,RAX
CALL 0x00101190
MOV RAX,qword ptr [RBP + -0x18]
MOV ESI,0x1
MOV RDI,RAX
CALL 0x00102448
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RDX + 0x48]
LEA RBX,[RDX + 0x8]
MOV RDI,RAX
CALL 0x001024ae
MOV qword ptr [RBX],RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x001023cd
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RAX + 0x30]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101dfd
MOV RAX,qword ptr [RBP + -0x18]
ADD RAX,0x30
MOV RDX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RDX + 0x48]
ADD RDX,0x8
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001022b8
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RAX + 0x38]
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RAX + 0x30],RDX
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
CALL 0x001024dc
MOV RSI,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x18]
MOV RAX,qword ptr [RBP + -0x10]
MOV RCX,qword ptr [RAX + 0x18]
MOV RAX,RDX
SUB RAX,RCX
SAR RAX,0x3
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x18]
TEST RAX,RAX
SETNZ AL
MOVZX EDX,AL
MOV RAX,RCX
SUB RAX,RDX
IMUL RSI,RAX
MOV RCX,RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,qword ptr [RAX + 0x8]
MOV RAX,RDX
SUB RAX,RSI
SAR RAX,0x2
LEA RSI,[RCX + RAX*0x1]
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x10]
MOV RCX,qword ptr [RAX]
MOV RAX,RDX
SUB RAX,RCX
SAR RAX,0x2
ADD RAX,RSI
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
SETZ AL
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x8]
CMP RDX,RAX
JNZ 0x00102012
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x18]
LEA RDX,[RAX + -0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001022b8
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
LEA RDX,[RAX + -0x4]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024f0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RDX + 0x38]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010230c
MOV RAX,qword ptr [RBP + -0x18]
ADD RAX,0x30
MOV RDX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RDX + 0x48]
SUB RDX,0x8
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001022b8
MOV RAX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RAX + 0x40]
LEA RDX,[RAX + -0x4]
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RAX + 0x30],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RBX,qword ptr [RAX + 0x30]
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001018d6
MOV RSI,RBX
MOV RDI,RAX
CALL 0x0010203f
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102504
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],0x0
MOV RAX,qword ptr [RBP + -0x8]
ADD RAX,0x10
MOV RDI,RAX
CALL 0x00102514
MOV RAX,qword ptr [RBP + -0x8]
ADD RAX,0x30
MOV RDI,RAX
CALL 0x00102514
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x0010218e
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x00102192
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x19]
MOV RDX,qword ptr [RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102344
MOV RDX,qword ptr [RBP + -0x30]
LEA RAX,[RBP + -0x19]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102552
MOV RBX,RAX
NOP
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x0010237c
MOV RAX,RBX
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00102225
JMP 0x00102220
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x0010237c
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101270
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x38
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV qword ptr [RBP + -0x38],RDX
MOV RAX,qword ptr [RBP + -0x30]
MOV qword ptr [RBP + -0x18],RAX
JMP 0x00102267
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x001024ae
MOV RDX,qword ptr [RBP + -0x18]
MOV qword ptr [RDX],RAX
ADD qword ptr [RBP + -0x18],0x8
MOV RAX,qword ptr [RBP + -0x18]
CMP RAX,qword ptr [RBP + -0x38]
JC 0x0010224f
JMP 0x001022b2
ENDBR64
MOV RDI,RAX
CALL 0x00101180
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x30]
MOV RAX,qword ptr [RBP + -0x28]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101cec
CALL 0x00101220
ENDBR64
MOV RBX,RAX
CALL 0x00101250
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101270
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x20]
MOV qword ptr [RAX + 0x18],RDX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RAX + 0x8],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RBX,qword ptr [RAX + 0x8]
CALL 0x001024dc
SHL RAX,0x2
LEA RDX,[RBX + RAX*0x1]
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RAX + 0x10],RDX
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV EDI,0x4
CALL 0x0010157a
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RBP + -0x10]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102580
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x001025b2
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001025c4
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001025e8
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001025f8
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x001023cd
MOV EBX,dword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RSI,RAX
MOV EDI,0x4
CALL 0x00101564
MOV dword ptr [RAX],EBX
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001025b2
MOV RDI,RAX
CALL 0x0010262d
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
LEA RSI,[RAX + 0x1]
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX + 0x48]
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,qword ptr [RAX]
MOV RAX,RCX
SUB RAX,RDI
SAR RAX,0x3
MOV RCX,RAX
MOV RAX,RDX
SUB RAX,RCX
CMP RSI,RAX
JBE 0x001024ab
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,0x0
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102696
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV EDI,0x4
CALL 0x0010157a
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001028b9
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV EDI,0x4
CALL 0x0010157a
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x10],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x18],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,0x0
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102900
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102966
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010299c
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX*0x8]
MOV RAX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011f0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,0x7fffffffffffffff
MOV qword ptr [RBP + -0x18],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x001029ab
MOV qword ptr [RBP + -0x10],RAX
LEA RDX,[RBP + -0x10]
LEA RAX,[RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001029c9
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00102694
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x58
MOV qword ptr [RBP + -0x48],RDI
MOV qword ptr [RBP + -0x50],RSI
MOV EAX,EDX
MOV byte ptr [RBP + -0x54],AL
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RAX + 0x48]
MOV RAX,qword ptr [RBP + -0x48]
MOV RCX,qword ptr [RAX + 0x28]
MOV RAX,RDX
SUB RAX,RCX
SAR RAX,0x3
ADD RAX,0x1
MOV qword ptr [RBP + -0x30],RAX
MOV RDX,qword ptr [RBP + -0x50]
MOV RAX,qword ptr [RBP + -0x30]
ADD RAX,RDX
MOV qword ptr [RBP + -0x28],RAX
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x8]
MOV RDX,qword ptr [RBP + -0x28]
ADD RDX,RDX
CMP RAX,RDX
JBE 0x001027a3
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x8]
SUB RAX,qword ptr [RBP + -0x28]
SHR RAX,0x1
LEA RCX,[RAX*0x8]
CMP byte ptr [RBP + -0x54],0x0
JZ 0x00102727
MOV RAX,qword ptr [RBP + -0x50]
SHL RAX,0x3
JMP 0x0010272c
MOV EAX,0x0
ADD RAX,RCX
ADD RAX,RDX
MOV qword ptr [RBP + -0x38],RAX
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x28]
CMP qword ptr [RBP + -0x38],RAX
JNC 0x0010276c
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x48]
LEA RCX,[RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x28]
MOV RDX,qword ptr [RBP + -0x38]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001029f8
JMP 0x00102875
MOV RAX,qword ptr [RBP + -0x30]
LEA RDX,[RAX*0x8]
MOV RAX,qword ptr [RBP + -0x38]
ADD RDX,RAX
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x48]
LEA RCX,[RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x28]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102a47
JMP 0x00102875
MOV RAX,qword ptr [RBP + -0x48]
MOV RBX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x48]
LEA RDX,[RAX + 0x8]
LEA RAX,[RBP + -0x50]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x00102165
MOV RAX,qword ptr [RAX]
ADD RAX,RBX
ADD RAX,0x2
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102194
MOV qword ptr [RBP + -0x18],RAX
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x28]
SHR RAX,0x1
LEA RDX,[RAX*0x8]
CMP byte ptr [RBP + -0x54],0x0
JZ 0x0010280a
MOV RAX,qword ptr [RBP + -0x50]
SHL RAX,0x3
JMP 0x0010280f
MOV EAX,0x0
ADD RDX,RAX
MOV RAX,qword ptr [RBP + -0x18]
ADD RAX,RDX
MOV qword ptr [RBP + -0x38],RAX
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x48]
LEA RCX,[RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x48]
MOV RAX,qword ptr [RAX + 0x28]
MOV RDX,qword ptr [RBP + -0x38]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001029f8
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RDX + 0x8]
MOV RCX,qword ptr [RBP + -0x48]
MOV RCX,qword ptr [RCX]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101d38
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RBP + -0x18]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x48]
MOV RDX,qword ptr [RBP + -0x20]
MOV qword ptr [RAX + 0x8],RDX
MOV RAX,qword ptr [RBP + -0x48]
LEA RDX,[RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x38]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001022b8
MOV RAX,qword ptr [RBP + -0x48]
ADD RAX,0x30
MOV RDX,qword ptr [RBP + -0x30]
SHL RDX,0x3
LEA RCX,[RDX + -0x8]
MOV RDX,qword ptr [RBP + -0x38]
ADD RDX,RCX
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001022b8
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,0x0
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102aae
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,0xfffffffffffffff
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001028e8
CMP qword ptr [RBP + -0x10],RAX
SETA AL
MOVZX EAX,AL
TEST RAX,RAX
SETNZ AL
TEST AL,AL
JZ 0x00102952
MOV RAX,0x1fffffffffffffff
CMP qword ptr [RBP + -0x10],RAX
JBE 0x0010294d
CALL 0x001011b0
CALL 0x00101170
MOV RAX,qword ptr [RBP + -0x10]
SHL RAX,0x3
MOV RDI,RAX
CALL 0x001011e0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX*0x4]
MOV RAX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011f0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102b14
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x001029f2
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x001029f6
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102b32
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102b32
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RAX
MOV RSI,RBX
MOV RDI,RCX
CALL 0x00102b44
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102b32
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102b32
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RAX
MOV RSI,RBX
MOV RDI,RCX
CALL 0x00102bb2
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,0x1fffffffffffffff
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102a96
CMP qword ptr [RBP + -0x10],RAX
SETA AL
MOVZX EAX,AL
TEST RAX,RAX
SETNZ AL
TEST AL,AL
JZ 0x00102b00
MOV RAX,0x3fffffffffffffff
CMP qword ptr [RBP + -0x10],RAX
JBE 0x00102afb
CALL 0x001011b0
CALL 0x00101170
MOV RAX,qword ptr [RBP + -0x10]
SHL RAX,0x2
MOV RDI,RAX
CALL 0x001011e0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102a96
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R12
PUSH RBX
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00102c20
MOV R12,RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102c20
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102c20
MOV RDX,R12
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00102c32
MOV RDX,RAX
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102c63
ADD RSP,0x20
POP RBX
POP R12
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R12
PUSH RBX
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00102c20
MOV R12,RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102c20
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102c20
MOV RDX,R12
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00102c79
MOV RDX,RAX
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102c63
ADD RSP,0x20
POP RBX
POP R12
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102caa
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102cdb
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102d0c
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102d6f
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x18]
SAR RAX,0x3
MOV qword ptr [RBP + -0x8],RAX
CMP qword ptr [RBP + -0x8],0x0
JZ 0x00102d5a
MOV RAX,qword ptr [RBP + -0x8]
LEA RDX,[RAX*0x8]
MOV RCX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x28]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101240
MOV RAX,qword ptr [RBP + -0x8]
LEA RDX,[RAX*0x8]
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,RDX
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x18]
SAR RAX,0x3
MOV qword ptr [RBP + -0x8],RAX
CMP qword ptr [RBP + -0x8],0x0
JZ 0x00102dce
MOV RAX,qword ptr [RBP + -0x8]
LEA RDX,[RAX*0x8]
MOV RAX,qword ptr [RBP + -0x8]
SHL RAX,0x3
NEG RAX
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
ADD RCX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RAX
MOV RDI,RCX
CALL 0x00101240
MOV RAX,qword ptr [RBP + -0x8]
SHL RAX,0x3
NEG RAX
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,RDX
LEAVE
RET
ENDBR64
SUB RSP,0x8
ADD RSP,0x8
RET
