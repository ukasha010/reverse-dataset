ENDBR64
SUB RSP,0x8
MOV RAX,qword ptr [0x00103fe8]
TEST RAX,RAX
JZ 0x00101016
CALL RAX
ADD RSP,0x8
RET
PUSH qword ptr [0x00103f20]
JMP qword ptr [0x00103f28]
ENDBR64
PUSH 0x0
JMP 0x00101020
NOP
ENDBR64
PUSH 0x1
JMP 0x00101020
NOP
ENDBR64
PUSH 0x2
JMP 0x00101020
NOP
ENDBR64
PUSH 0x3
JMP 0x00101020
NOP
ENDBR64
PUSH 0x4
JMP 0x00101020
NOP
ENDBR64
PUSH 0x5
JMP 0x00101020
NOP
ENDBR64
PUSH 0x6
JMP 0x00101020
NOP
ENDBR64
PUSH 0x7
JMP 0x00101020
NOP
ENDBR64
PUSH 0x8
JMP 0x00101020
NOP
ENDBR64
PUSH 0x9
JMP 0x00101020
NOP
ENDBR64
PUSH 0xa
JMP 0x00101020
NOP
ENDBR64
PUSH 0xb
JMP 0x00101020
NOP
ENDBR64
PUSH 0xc
JMP 0x00101020
NOP
ENDBR64
PUSH 0xd
JMP 0x00101020
NOP
ENDBR64
PUSH 0xe
JMP 0x00101020
NOP
ENDBR64
PUSH 0xf
JMP 0x00101020
NOP
ENDBR64
PUSH 0x10
JMP 0x00101020
NOP
ENDBR64
PUSH 0x11
JMP 0x00101020
NOP
ENDBR64
PUSH 0x12
JMP 0x00101020
NOP
ENDBR64
JMP qword ptr [0x00103fc8]
ENDBR64
JMP qword ptr [0x00103f30]
ENDBR64
JMP qword ptr [0x00103f38]
ENDBR64
JMP qword ptr [0x00103f40]
ENDBR64
JMP qword ptr [0x00103f48]
ENDBR64
JMP qword ptr [0x00103f50]
ENDBR64
JMP qword ptr [0x00103f58]
ENDBR64
JMP qword ptr [0x00103f60]
ENDBR64
JMP qword ptr [0x00103f68]
ENDBR64
JMP qword ptr [0x00103f70]
ENDBR64
JMP qword ptr [0x00103f78]
ENDBR64
JMP qword ptr [0x00103f80]
ENDBR64
JMP qword ptr [0x00103f88]
ENDBR64
JMP qword ptr [0x00103f90]
ENDBR64
JMP qword ptr [0x00103f98]
ENDBR64
JMP qword ptr [0x00103fa0]
ENDBR64
JMP qword ptr [0x00103fa8]
ENDBR64
JMP qword ptr [0x00103fb0]
ENDBR64
JMP qword ptr [0x00103fb8]
ENDBR64
JMP qword ptr [0x00103fc0]
ENDBR64
XOR EBP,EBP
MOV R9,RDX
POP RSI
MOV RDX,RSP
AND RSP,-0x10
PUSH RAX
PUSH RSP
XOR R8D,R8D
XOR ECX,ECX
LEA RDI,[0x101389]
CALL qword ptr [0x00103fd8]
HLT
LEA RDI,[0x104018]
LEA RAX,[0x104018]
CMP RAX,RDI
JZ 0x001012f8
MOV RAX,qword ptr [0x00103fe0]
TEST RAX,RAX
JZ 0x001012f8
JMP RAX
RET
LEA RDI,[0x104018]
LEA RSI,[0x104018]
SUB RSI,RDI
MOV RAX,RSI
SHR RSI,0x3f
SAR RAX,0x3
ADD RSI,RAX
SAR RSI,0x1
JZ 0x00101338
MOV RAX,qword ptr [0x00103ff0]
TEST RAX,RAX
JZ 0x00101338
JMP RAX
RET
ENDBR64
CMP byte ptr [0x00104150],0x0
JNZ 0x00101378
PUSH RBP
CMP qword ptr [0x00103fc8],0x0
MOV RBP,RSP
JZ 0x00101367
MOV RDI,qword ptr [0x00104008]
CALL 0x00101160
CALL 0x001012d0
MOV byte ptr [0x00104150],0x1
POP RBP
RET
RET
ENDBR64
JMP 0x00101300
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x58
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV qword ptr [RBP + -0x50],0x0
LEA RAX,[0x102050]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001011f0
MOV RDX,RAX
LEA RAX,[RBP + -0x50]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x00101935
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101200
MOV qword ptr [RBP + -0x48],0x11
LEA RAX,[0x10205c]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001011f0
MOV RDX,RAX
LEA RAX,[RBP + -0x48]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x00101935
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101200
LEA RAX,[RBP + -0x40]
MOV R8D,0x31
MOV ECX,0x30
MOV RDX,-0x1
LEA RSI,[0x102069]
MOV RDI,RAX
CALL 0x00101a58
LEA RAX,[0x10206e]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001011f0
MOV RDX,RAX
LEA RAX,[RBP + -0x40]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x00101935
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101200
MOV qword ptr [RBP + -0x38],0x0
LEA RAX,[RBP + -0x30]
LEA RCX,[RBP + -0x38]
MOV EDX,0x1
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101aee
LEA RAX,[RBP + -0x30]
MOV ESI,0x1
MOV RDI,RAX
CALL 0x00101b34
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x00101b24
LEA RAX,[RBP + -0x30]
LEA RCX,[RBP + -0x38]
MOV EDX,0x8
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101aee
LEA RAX,[RBP + -0x30]
MOV ESI,0x1
MOV RDI,RAX
CALL 0x00101b34
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x00101b24
LEA RAX,[0x10207a]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001011f0
MOV RDX,RAX
LEA RAX,[RBP + -0x38]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x00101935
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101200
MOV dword ptr [RBP + -0x54],0x1e
LEA RAX,[0x102086]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001011f0
MOV RDX,RAX
MOV EAX,dword ptr [RBP + -0x54]
MOV ESI,EAX
MOV RDI,RDX
CALL 0x00101260
MOV RDX,RAX
LEA RAX,[0x10209c]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001011f0
MOV RBX,RAX
MOV EAX,dword ptr [RBP + -0x54]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101856
LEA RAX,[RBP + -0x30]
MOV RSI,RAX
MOV RDI,RBX
CALL 0x00101935
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101200
MOV EAX,0x0
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001015d7
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],EDI
MOV dword ptr [RBP + -0x8],ESI
CMP dword ptr [RBP + -0x4],0x1
JNZ 0x00101630
CMP dword ptr [RBP + -0x8],0xffff
JNZ 0x00101630
LEA RAX,[0x104151]
MOV RDI,RAX
CALL 0x00101250
LEA RAX,[0x104008]
MOV RDX,RAX
LEA RAX,[0x104151]
MOV RSI,RAX
MOV RAX,qword ptr [0x00103ff8]
MOV RDI,RAX
CALL 0x001011d0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV ESI,0xffff
MOV EDI,0x1
CALL 0x001015dd
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOVZX EDX,byte ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV byte ptr [RAX],DL
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOVZX EDX,byte ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
MOVZX EAX,byte ptr [RAX]
CMP DL,AL
SETZ AL
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RBP + -0x8],RAX
MOV EAX,0x0
TEST AL,AL
JZ 0x001016c0
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001018c8
JMP 0x001016cd
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101180
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
LEA RDX,[RAX + 0xd0]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011b0
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV EAX,ESI
MOV byte ptr [RBP + -0xc],AL
MOV RAX,qword ptr [RBP + -0x8]
MOVZX EAX,byte ptr [RAX + 0x38]
TEST AL,AL
JZ 0x00101739
MOVZX EAX,byte ptr [RBP + -0xc]
MOVZX EAX,AL
MOV RDX,qword ptr [RBP + -0x8]
CDQE
MOVZX EAX,byte ptr [RDX + RAX*0x1 + 0x39]
JMP 0x00101763
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101220
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
ADD RAX,0x30
MOV RCX,qword ptr [RAX]
MOVSX EDX,byte ptr [RBP + -0xc]
MOV RAX,qword ptr [RBP + -0x8]
MOV ESI,EDX
MOV RDI,RAX
CALL RCX
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x0010178e
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x00101792
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV qword ptr [RAX],RDX
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
AND EAX,0x3f
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001017cc
MOV EDX,0x1
MOV ECX,EAX
SHL RDX,CL
MOV RAX,RDX
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RBX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x0010188d
MOV RSI,RAX
MOV RDI,RBX
CALL 0x001017ae
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOVZX EAX,AX
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOVZX EDX,byte ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
MOVZX EAX,byte ptr [RAX]
CMP DL,AL
SETZ AL
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV qword ptr [RBP + -0x10],0x0
JMP 0x001018f6
ADD qword ptr [RBP + -0x10],0x1
MOV byte ptr [RBP + -0x11],0x0
MOV RDX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x10]
ADD RDX,RAX
LEA RAX,[RBP + -0x11]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001018a2
XOR EAX,0x1
TEST AL,AL
JNZ 0x001018f1
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101933
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x58
MOV qword ptr [RBP + -0x58],RDI
MOV qword ptr [RBP + -0x60],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101230
MOV RAX,qword ptr [RBP + -0x58]
MOV RAX,qword ptr [RAX]
SUB RAX,0x18
MOV RAX,qword ptr [RAX]
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x58]
ADD RDX,RAX
LEA RAX,[RBP + -0x50]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001016d0
LEA RAX,[RBP + -0x50]
MOV RDI,RAX
CALL 0x00101170
MOV qword ptr [RBP + -0x48],RAX
LEA RAX,[RBP + -0x50]
MOV RDI,RAX
CALL 0x00101240
MOV RAX,qword ptr [RBP + -0x48]
MOV ESI,0x31
MOV RDI,RAX
CALL 0x00101704
MOVSX EBX,AL
MOV RAX,qword ptr [RBP + -0x48]
MOV ESI,0x30
MOV RDI,RAX
CALL 0x00101704
MOVSX EDX,AL
LEA RSI,[RBP + -0x40]
MOV RAX,qword ptr [RBP + -0x60]
MOV ECX,EBX
MOV RDI,RAX
CALL 0x00101bae
LEA RDX,[RBP + -0x40]
MOV RAX,qword ptr [RBP + -0x58]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011e0
MOV RBX,RAX
NOP
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x001011a0
MOV RAX,RBX
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101a51
JMP 0x00101a4c
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x50]
MOV RDI,RAX
CALL 0x00101240
JMP 0x00101a35
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x001011a0
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101280
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV EAX,ECX
MOV EDX,R8D
MOV byte ptr [RBP + -0x1c],AL
MOV EAX,EDX
MOV byte ptr [RBP + -0x20],AL
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101794
CMP qword ptr [RBP + -0x10],0x0
JNZ 0x00101a9f
LEA RAX,[0x1020a0]
MOV RDI,RAX
CALL 0x001011c0
CMP qword ptr [RBP + -0x18],-0x1
JNZ 0x00101ab6
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x00101691
MOV qword ptr [RBP + -0x18],RAX
MOVSX ECX,byte ptr [RBP + -0x20]
MOVSX R8D,byte ptr [RBP + -0x1c]
MOV RDI,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
SUB RSP,0x8
PUSH RCX
MOV R9D,R8D
MOV R8,RDI
MOV ECX,0x0
MOV RDI,RAX
CALL 0x00101c42
ADD RSP,0x10
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101d70
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV EAX,ESI
MOV byte ptr [RBP + -0xc],AL
CMP byte ptr [RBP + -0xc],0x0
JZ 0x00101b7b
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x8]
MOV RDI,RAX
CALL 0x001017e1
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV RCX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
OR RDX,RCX
MOV qword ptr [RAX],RDX
JMP 0x00101ba8
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x8]
MOV RDI,RAX
CALL 0x001017e1
NOT RAX
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
AND RDX,RCX
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV EAX,ECX
MOV byte ptr [RBP + -0x24],DL
MOV byte ptr [RBP + -0x28],AL
MOVSX EDX,byte ptr [RBP + -0x24]
MOV RAX,qword ptr [RBP + -0x20]
MOV ESI,0x10
MOV RDI,RAX
CALL 0x00101270
MOV qword ptr [RBP + -0x8],0x10
JMP 0x00101c36
MOV RAX,qword ptr [RBP + -0x8]
LEA RDX,[RAX + -0x1]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101dba
TEST AL,AL
JZ 0x00101c31
MOV EAX,0x10
SUB RAX,qword ptr [RBP + -0x8]
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101290
MOV RDX,RAX
LEA RAX,[RBP + -0x28]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x0010164c
SUB qword ptr [RBP + -0x8],0x1
CMP qword ptr [RBP + -0x8],0x0
JNZ 0x00101be9
NOP
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x60
MOV qword ptr [RBP + -0x38],RDI
MOV qword ptr [RBP + -0x40],RSI
MOV qword ptr [RBP + -0x48],RDX
MOV qword ptr [RBP + -0x50],RCX
MOV qword ptr [RBP + -0x58],R8
MOV EDX,R9D
MOV EAX,dword ptr [RBP + 0x10]
MOV byte ptr [RBP + -0x5c],DL
MOV byte ptr [RBP + -0x60],AL
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x00101e00
MOV RAX,qword ptr [RBP + -0x48]
SUB RAX,qword ptr [RBP + -0x50]
MOV qword ptr [RBP + -0x28],RAX
LEA RDX,[RBP + -0x28]
LEA RAX,[RBP + -0x58]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101765
MOV RDX,RAX
MOV qword ptr [RBP + -0x20],0x10
LEA RAX,[RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101765
MOV RAX,qword ptr [RAX]
MOV qword ptr [RBP + -0x10],RAX
MOV RAX,qword ptr [RBP + -0x10]
MOV qword ptr [RBP + -0x18],RAX
JMP 0x00101d4d
MOV RDX,qword ptr [RBP + -0x50]
MOV RAX,qword ptr [RBP + -0x10]
ADD RAX,RDX
SUB RAX,qword ptr [RBP + -0x18]
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x40]
ADD RAX,RDX
MOVZX EAX,byte ptr [RAX]
MOV byte ptr [RBP + -0x20],AL
LEA RDX,[RBP + -0x5c]
LEA RAX,[RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010166c
TEST AL,AL
JNZ 0x00101d48
LEA RDX,[RBP + -0x60]
LEA RAX,[RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010166c
TEST AL,AL
JZ 0x00101d39
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX + -0x1]
MOV RAX,qword ptr [RBP + -0x38]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101e22
JMP 0x00101d48
LEA RAX,[0x1020c3]
MOV RDI,RAX
CALL 0x00101190
SUB qword ptr [RBP + -0x18],0x1
CMP qword ptr [RBP + -0x18],0x0
JNZ 0x00101cd3
NOP
MOV RAX,qword ptr [RBP + -0x8]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00101d6d
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010180c
MOV RDX,qword ptr [RBP + -0x8]
MOV qword ptr [RDX],RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001017cc
MOV RDX,qword ptr [RBP + -0x8]
MOV qword ptr [RDX + 0x8],RAX
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101822
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x001017e1
AND RAX,RBX
TEST RAX,RAX
SETNZ AL
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010183c
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x001017e1
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010180c
MOV RDX,qword ptr [RAX]
OR RDX,RBX
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
SUB RSP,0x8
ADD RSP,0x8
RET
