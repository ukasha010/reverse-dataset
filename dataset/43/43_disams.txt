ENDBR64
SUB RSP,0x8
MOV RAX,qword ptr [0x00105fe8]
TEST RAX,RAX
JZ 0x00101016
CALL RAX
ADD RSP,0x8
RET
PUSH qword ptr [0x00105f40]
JMP qword ptr [0x00105f48]
ENDBR64
PUSH 0x0
JMP 0x00101020
NOP
ENDBR64
PUSH 0x1
JMP 0x00101020
NOP
ENDBR64
PUSH 0x2
JMP 0x00101020
NOP
ENDBR64
PUSH 0x3
JMP 0x00101020
NOP
ENDBR64
PUSH 0x4
JMP 0x00101020
NOP
ENDBR64
PUSH 0x5
JMP 0x00101020
NOP
ENDBR64
PUSH 0x6
JMP 0x00101020
NOP
ENDBR64
PUSH 0x7
JMP 0x00101020
NOP
ENDBR64
PUSH 0x8
JMP 0x00101020
NOP
ENDBR64
PUSH 0x9
JMP 0x00101020
NOP
ENDBR64
PUSH 0xa
JMP 0x00101020
NOP
ENDBR64
PUSH 0xb
JMP 0x00101020
NOP
ENDBR64
PUSH 0xc
JMP 0x00101020
NOP
ENDBR64
PUSH 0xd
JMP 0x00101020
NOP
ENDBR64
PUSH 0xe
JMP 0x00101020
NOP
ENDBR64
JMP qword ptr [0x00105fc8]
ENDBR64
JMP qword ptr [0x00105f50]
ENDBR64
JMP qword ptr [0x00105f58]
ENDBR64
JMP qword ptr [0x00105f60]
ENDBR64
JMP qword ptr [0x00105f68]
ENDBR64
JMP qword ptr [0x00105f70]
ENDBR64
JMP qword ptr [0x00105f78]
ENDBR64
JMP qword ptr [0x00105f80]
ENDBR64
JMP qword ptr [0x00105f88]
ENDBR64
JMP qword ptr [0x00105f90]
ENDBR64
JMP qword ptr [0x00105f98]
ENDBR64
JMP qword ptr [0x00105fa0]
ENDBR64
JMP qword ptr [0x00105fa8]
ENDBR64
JMP qword ptr [0x00105fb0]
ENDBR64
JMP qword ptr [0x00105fb8]
ENDBR64
JMP qword ptr [0x00105fc0]
ENDBR64
XOR EBP,EBP
MOV R9,RDX
POP RSI
MOV RDX,RSP
AND RSP,-0x10
PUSH RAX
PUSH RSP
XOR R8D,R8D
XOR ECX,ECX
LEA RDI,[0x101309]
CALL qword ptr [0x00105fd8]
HLT
LEA RDI,[0x106018]
LEA RAX,[0x106018]
CMP RAX,RDI
JZ 0x00101278
MOV RAX,qword ptr [0x00105fe0]
TEST RAX,RAX
JZ 0x00101278
JMP RAX
RET
LEA RDI,[0x106018]
LEA RSI,[0x106018]
SUB RSI,RDI
MOV RAX,RSI
SHR RSI,0x3f
SAR RAX,0x3
ADD RSI,RAX
SAR RSI,0x1
JZ 0x001012b8
MOV RAX,qword ptr [0x00105ff0]
TEST RAX,RAX
JZ 0x001012b8
JMP RAX
RET
ENDBR64
CMP byte ptr [0x00106150],0x0
JNZ 0x001012f8
PUSH RBP
CMP qword ptr [0x00105fc8],0x0
MOV RBP,RSP
JZ 0x001012e7
MOV RDI,qword ptr [0x00106008]
CALL 0x00101120
CALL 0x00101250
MOV byte ptr [0x00106150],0x1
POP RBP
RET
RET
ENDBR64
JMP 0x00101280
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x48
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101614
MOV byte ptr [RBP + -0x41],0x58
LEA RDX,[RBP + -0x41]
LEA RAX,[RBP + -0x40]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101696
MOV byte ptr [RBP + -0x41],0x41
LEA RDX,[RBP + -0x41]
LEA RAX,[RBP + -0x40]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101696
MOV byte ptr [RBP + -0x41],0x53
LEA RDX,[RBP + -0x41]
LEA RAX,[RBP + -0x40]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101696
MOV byte ptr [RBP + -0x41],0x4f
LEA RDX,[RBP + -0x41]
LEA RAX,[RBP + -0x40]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101696
LEA RAX,[0x103050]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x00101180
MOV RBX,RAX
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x001016f4
MOV RSI,RAX
MOV RDI,RBX
CALL 0x00101140
MOV RDX,qword ptr [0x00105fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011b0
LEA RAX,[0x103058]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x00101180
MOV RDX,qword ptr [0x00105fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011b0
JMP 0x00101440
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101730
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV ESI,EAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011d0
MOV RDX,qword ptr [0x00105fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011b0
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x0010174e
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101712
XOR EAX,0x1
TEST AL,AL
JNZ 0x001013ff
MOV EBX,0x0
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101566
MOV EAX,EBX
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x0010149a
JMP 0x00101495
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101566
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101210
CALL 0x001011c0
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],EDI
MOV dword ptr [RBP + -0x8],ESI
CMP dword ptr [RBP + -0x4],0x1
JNZ 0x001014f3
CMP dword ptr [RBP + -0x8],0xffff
JNZ 0x001014f3
LEA RAX,[0x106151]
MOV RDI,RAX
CALL 0x001011e0
LEA RAX,[0x106008]
MOV RDX,RAX
LEA RAX,[0x106151]
MOV RSI,RAX
MOV RAX,qword ptr [0x00105ff8]
MOV RDI,RAX
CALL 0x00101170
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV ESI,0xffff
MOV EDI,0x1
CALL 0x001014a0
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x0010154e
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x00101552
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010164e
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x001015ae
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x001015b2
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101130
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101798
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001015d4
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
MOV qword ptr [RAX + 0x8],0x0
MOV qword ptr [RAX + 0x10],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001015f4
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101812
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101824
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001017c4
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RBX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00101852
MOV RSI,RAX
MOV RDI,RBX
CALL 0x00101864
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001018e6
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x0010189a
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00101936
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a00
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a24
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a8c
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001018e6
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x0010189a
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00101aef
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101b6c
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101200
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101c0a
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,RDX
SUB RAX,RCX
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101c3c
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001015b4
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101c75
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x00101852
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101ca0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101d48
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001018e4
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX + 0x8]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101d48
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101934
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x48
MOV qword ptr [RBP + -0x38],RDI
MOV qword ptr [RBP + -0x40],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x41]
MOV RDI,RAX
CALL 0x00101add
LEA RAX,[RBP + -0x22]
MOV RDI,RAX
CALL 0x00101d6a
LEA RAX,[RBP + -0x40]
MOV ESI,0x1
MOV RDI,RAX
CALL 0x00101d8a
MOV qword ptr [RBP + -0x20],RAX
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x00101df0
MOV RDI,RAX
CALL 0x00101852
MOVZX EAX,byte ptr [RAX]
MOV byte ptr [RBP + -0x21],AL
LEA RAX,[RBP + -0x21]
MOV RDI,RAX
CALL 0x00101852
MOVZX EAX,byte ptr [RAX]
MOVSX EBX,AL
LEA RDX,[RBP + -0x38]
LEA RAX,[RBP + -0x40]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101e05
LEA RSI,[RAX + -0x1]
LEA RDX,[RBP + -0x22]
MOV RAX,qword ptr [RBP + -0x38]
MOV R8,RDX
MOV ECX,EBX
MOV EDX,0x0
MOV RDI,RAX
CALL 0x00101e44
NOP
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x001019f9
CALL 0x001011c0
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,RDX
SUB RAX,RCX
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101fea
MOV qword ptr [RBP + -0x10],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101f9e
MOV qword ptr [RBP + -0x18],RAX
LEA RDX,[RBP + -0x10]
LEA RAX,[RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010203a
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101a8a
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101f9e
MOV qword ptr [RBP + -0x10],RAX
LEA RAX,[RBP + -0x10]
MOV RDI,RAX
CALL 0x0010207a
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101adb
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
LEA RDX,[RBP + -0x18]
LEA RAX,[RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101e05
CMP RAX,0x1
SETG AL
TEST AL,AL
JZ 0x00101b54
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x00102090
LEA RCX,[RBP + -0x9]
MOV RDX,qword ptr [RBP + -0x20]
MOV RSI,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001020b4
NOP
MOV RAX,qword ptr [RBP + -0x8]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00101b69
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x8]
LEA RDX,[RAX + -0x1]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102175
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001021a0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,0x0
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001021e6
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x10],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
CMP qword ptr [RBP + -0x10],0x0
JZ 0x00101c72
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101baa
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102232
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RAX + 0x10]
CMP RDX,RAX
JZ 0x00101d06
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00101554
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102245
MOV RAX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RAX + 0x8]
LEA RDX,[RAX + 0x1]
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RAX + 0x8],RDX
JMP 0x00101d36
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00101554
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001018e6
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,RBX
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102282
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102428
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
LEA RAX,[RBP + -0x9]
MOV RDI,RAX
CALL 0x00101add
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x30]
NEG RAX
ADD RAX,RDX
MOV qword ptr [RBP + -0x18],RAX
LEA RDX,[RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101d48
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101ded
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x0010248e
MOV RBX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x0010248e
MOV RDX,qword ptr [RAX]
MOV RAX,RBX
SUB RAX,RDX
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x58
MOV qword ptr [RBP + -0x38],RDI
MOV qword ptr [RBP + -0x40],RSI
MOV qword ptr [RBP + -0x48],RDX
MOV EAX,ECX
MOV qword ptr [RBP + -0x58],R8
MOV byte ptr [RBP + -0x4c],AL
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x40]
SUB RAX,0x1
MOV RDX,RAX
SHR RDX,0x3f
ADD RAX,RDX
SAR RAX,0x1
MOV qword ptr [RBP + -0x20],RAX
JMP 0x00101f04
MOV RDX,qword ptr [RBP + -0x20]
LEA RAX,[RBP + -0x38]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV qword ptr [RBP + -0x28],RAX
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x00101df0
MOV RDI,RAX
CALL 0x00101852
MOVZX EBX,byte ptr [RAX]
MOV RDX,qword ptr [RBP + -0x40]
LEA RAX,[RBP + -0x38]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV qword ptr [RBP + -0x30],RAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x00101df0
MOV byte ptr [RAX],BL
MOV RAX,qword ptr [RBP + -0x20]
MOV qword ptr [RBP + -0x40],RAX
MOV RAX,qword ptr [RBP + -0x40]
SUB RAX,0x1
MOV RDX,RAX
SHR RDX,0x3f
ADD RAX,RDX
SAR RAX,0x1
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x40]
CMP RAX,qword ptr [RBP + -0x48]
JLE 0x00101f42
MOV RDX,qword ptr [RBP + -0x20]
LEA RAX,[RBP + -0x38]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV RCX,RAX
LEA RDX,[RBP + -0x4c]
MOV RAX,qword ptr [RBP + -0x58]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102502
TEST AL,AL
JZ 0x00101f42
MOV EAX,0x1
JMP 0x00101f47
MOV EAX,0x0
TEST AL,AL
JNZ 0x00101e90
LEA RAX,[RBP + -0x4c]
MOV RDI,RAX
CALL 0x00101852
MOVZX EBX,byte ptr [RAX]
MOV RDX,qword ptr [RBP + -0x40]
LEA RAX,[RBP + -0x38]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV qword ptr [RBP + -0x28],RAX
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x00101df0
MOV byte ptr [RAX],BL
NOP
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00101f98
CALL 0x001011c0
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102546
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101fe8
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX + 0x8]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102546
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00102038
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102568
MOV RBX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102568
MOV RAX,qword ptr [RAX]
CMP RBX,RAX
SETZ AL
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
LEA RDX,[RAX + -0x1]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x38
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV qword ptr [RBP + -0x38],RDX
MOV qword ptr [RBP + -0x40],RCX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x38]
MOV RDI,RAX
CALL 0x00101df0
MOV RDI,RAX
CALL 0x00101852
MOVZX EAX,byte ptr [RAX]
MOV byte ptr [RBP + -0x19],AL
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x00101df0
MOV RDI,RAX
CALL 0x00101852
MOVZX EBX,byte ptr [RAX]
LEA RAX,[RBP + -0x38]
MOV RDI,RAX
CALL 0x00101df0
MOV byte ptr [RAX],BL
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x00101852
MOVZX EAX,byte ptr [RAX]
MOVSX EBX,AL
LEA RDX,[RBP + -0x28]
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101e05
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV ECX,EBX
MOV ESI,0x0
MOV RDI,RAX
CALL 0x0010257a
NOP
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x0010216f
CALL 0x001011c0
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102794
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011a0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,0x7fffffffffffffff
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001021ce
CMP qword ptr [RBP + -0x10],RAX
SETA AL
MOVZX EAX,AL
TEST RAX,RAX
SETNZ AL
TEST AL,AL
JZ 0x00102223
CALL 0x00101150
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x00101190
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101554
MOV RDX,RAX
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001027c6
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x68
MOV qword ptr [RBP + -0x58],RDI
MOV qword ptr [RBP + -0x60],RSI
MOV qword ptr [RBP + -0x68],RDX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x58]
LEA RDX,[0x10306a]
MOV ESI,0x1
MOV RDI,RAX
CALL 0x00102808
MOV qword ptr [RBP + -0x48],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RAX,qword ptr [RAX]
MOV qword ptr [RBP + -0x40],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RAX,qword ptr [RAX + 0x8]
MOV qword ptr [RBP + -0x38],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RDI,RAX
CALL 0x0010189a
MOV qword ptr [RBP + -0x50],RAX
LEA RDX,[RBP + -0x50]
LEA RAX,[RBP + -0x60]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101e05
MOV qword ptr [RBP + -0x30],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001028f8
MOV qword ptr [RBP + -0x28],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x68]
MOV RDI,RAX
CALL 0x00101554
MOV RDX,RAX
MOV RCX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x30]
ADD RCX,RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102245
MOV qword ptr [RBP + -0x20],0x0
MOV RAX,qword ptr [RBP + -0x58]
MOV RDI,RAX
CALL 0x00101812
MOV RBX,RAX
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x0010248e
MOV RSI,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x40]
MOV RCX,RBX
MOV RDI,RAX
CALL 0x0010292f
MOV qword ptr [RBP + -0x20],RAX
ADD qword ptr [RBP + -0x20],0x1
MOV RAX,qword ptr [RBP + -0x58]
MOV RDI,RAX
CALL 0x00101812
MOV RBX,RAX
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x0010248e
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x20]
MOV RSI,qword ptr [RBP + -0x38]
MOV RCX,RBX
MOV RDI,RAX
CALL 0x0010292f
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RDX + 0x10]
SUB RDX,qword ptr [RBP + -0x40]
MOV RCX,qword ptr [RBP + -0x40]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101c3c
MOV RAX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RBP + -0x28]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RBP + -0x20]
MOV qword ptr [RAX + 0x8],RDX
MOV RDX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x48]
ADD RDX,RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV qword ptr [RAX + 0x10],RDX
NOP
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00102421
CALL 0x001011c0
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x001018e6
MOV qword ptr [RBP + -0x18],RAX
LEA RAX,[RBP + -0x18]
MOV ESI,0x1
MOV RDI,RAX
CALL 0x00101d8a
MOV qword ptr [RBP + -0x10],RAX
LEA RAX,[RBP + -0x10]
MOV RDI,RAX
CALL 0x00101df0
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x0010248c
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x30]
ADD RAX,RDX
MOV qword ptr [RBP + -0x18],RAX
LEA RDX,[RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101d48
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00102500
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RBX,qword ptr [RBP + -0x18]
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x00101df0
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RAX
MOV RSI,RCX
MOV RDI,RBX
CALL 0x00102966
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x58
MOV qword ptr [RBP + -0x48],RDI
MOV qword ptr [RBP + -0x50],RSI
MOV qword ptr [RBP + -0x58],RDX
MOV EAX,ECX
MOV byte ptr [RBP + -0x5c],AL
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x50]
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x50]
MOV qword ptr [RBP + -0x28],RAX
JMP 0x00102671
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,0x1
ADD RAX,RAX
MOV qword ptr [RBP + -0x28],RAX
MOV RAX,qword ptr [RBP + -0x28]
LEA RDX,[RAX + -0x1]
LEA RAX,[RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV RBX,RAX
MOV RDX,qword ptr [RBP + -0x28]
LEA RAX,[RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV RCX,RAX
LEA RAX,[RBP + -0x59]
MOV RDX,RBX
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102990
TEST AL,AL
JZ 0x00102616
SUB qword ptr [RBP + -0x28],0x1
MOV RDX,qword ptr [RBP + -0x28]
LEA RAX,[RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV qword ptr [RBP + -0x30],RAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x00101df0
MOV RDI,RAX
CALL 0x00101852
MOVZX EBX,byte ptr [RAX]
MOV RDX,qword ptr [RBP + -0x50]
LEA RAX,[RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV qword ptr [RBP + -0x38],RAX
LEA RAX,[RBP + -0x38]
MOV RDI,RAX
CALL 0x00101df0
MOV byte ptr [RAX],BL
MOV RAX,qword ptr [RBP + -0x28]
MOV qword ptr [RBP + -0x50],RAX
MOV RAX,qword ptr [RBP + -0x58]
SUB RAX,0x1
MOV RDX,RAX
SHR RDX,0x3f
ADD RAX,RDX
SAR RAX,0x1
CMP qword ptr [RBP + -0x28],RAX
JL 0x001025bc
MOV RAX,qword ptr [RBP + -0x58]
AND EAX,0x1
TEST RAX,RAX
JNZ 0x0010272d
MOV RAX,qword ptr [RBP + -0x58]
SUB RAX,0x2
MOV RDX,RAX
SHR RDX,0x3f
ADD RAX,RDX
SAR RAX,0x1
CMP qword ptr [RBP + -0x28],RAX
JNZ 0x0010272d
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,0x1
ADD RAX,RAX
MOV qword ptr [RBP + -0x28],RAX
MOV RAX,qword ptr [RBP + -0x28]
LEA RDX,[RAX + -0x1]
LEA RAX,[RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV qword ptr [RBP + -0x30],RAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x00101df0
MOV RDI,RAX
CALL 0x00101852
MOVZX EBX,byte ptr [RAX]
MOV RDX,qword ptr [RBP + -0x50]
LEA RAX,[RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024a0
MOV qword ptr [RBP + -0x38],RAX
LEA RAX,[RBP + -0x38]
MOV RDI,RAX
CALL 0x00101df0
MOV byte ptr [RAX],BL
MOV RAX,qword ptr [RBP + -0x28]
SUB RAX,0x1
MOV qword ptr [RBP + -0x50],RAX
LEA RAX,[RBP + -0x59]
MOV RDI,RAX
CALL 0x001029e1
MOV RDX,RAX
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001029f4
LEA RAX,[RBP + -0x5c]
MOV RDI,RAX
CALL 0x00101852
MOVZX EAX,byte ptr [RAX]
MOVSX ECX,AL
LEA RDI,[RBP + -0x30]
MOV RDX,qword ptr [RBP + -0x20]
MOV RSI,qword ptr [RBP + -0x50]
MOV RAX,qword ptr [RBP + -0x48]
MOV R8,RDI
MOV RDI,RAX
CALL 0x00101e44
NOP
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x0010278d
CALL 0x001011c0
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102a18
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101554
MOVZX EBX,byte ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RSI,RAX
MOV EDI,0x1
CALL 0x0010150f
MOV byte ptr [RAX],BL
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x48
MOV qword ptr [RBP + -0x38],RDI
MOV qword ptr [RBP + -0x40],RSI
MOV qword ptr [RBP + -0x48],RDX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x00102a36
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x00101a00
SUB RBX,RAX
MOV RDX,RBX
MOV RAX,qword ptr [RBP + -0x40]
CMP RDX,RAX
SETC AL
TEST AL,AL
JZ 0x0010286b
MOV RAX,qword ptr [RBP + -0x48]
MOV RDI,RAX
CALL 0x00101160
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x00101a00
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x00101a00
MOV qword ptr [RBP + -0x28],RAX
LEA RDX,[RBP + -0x40]
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101585
MOV RAX,qword ptr [RAX]
ADD RAX,RBX
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x00101a00
CMP qword ptr [RBP + -0x20],RAX
JC 0x001028cb
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x00102a36
CMP qword ptr [RBP + -0x20],RAX
JBE 0x001028d9
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x00102a36
JMP 0x001028dd
MOV RAX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001028f1
CALL 0x001011c0
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
CMP qword ptr [RBP + -0x10],0x0
JZ 0x00102928
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101bdc
JMP 0x0010292d
MOV EAX,0x0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV qword ptr [RBP + -0x20],RCX
MOV RCX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102a5c
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x10]
MOVZX EDX,byte ptr [RAX]
MOV RAX,qword ptr [RBP + -0x18]
MOVZX EAX,byte ptr [RAX]
CMP DL,AL
SETL AL
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R12
PUSH RBX
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RBX,qword ptr [RBP + -0x18]
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x00101df0
MOV R12,RAX
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x00101df0
MOV RDX,R12
MOV RSI,RAX
MOV RDI,RBX
CALL 0x00102966
ADD RSP,0x20
POP RBX
POP R12
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x00101add
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001021ce
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102afc
MOV RDI,RAX
CALL 0x00102a92
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV qword ptr [RBP + -0x20],RCX
MOV RCX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102b0e
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,0x7fffffffffffffff
MOV qword ptr [RBP + -0x18],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x001027a7
MOV qword ptr [RBP + -0x10],RAX
LEA RDX,[RBP + -0x10]
LEA RAX,[RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101525
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00102af9
CALL 0x001011c0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R12
PUSH RBX
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV qword ptr [RBP + -0x30],RCX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00102b75
MOV R12,RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102b75
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102b75
MOV RDI,RAX
MOV RAX,qword ptr [RBP + -0x30]
MOV RCX,RAX
MOV RDX,R12
MOV RSI,RBX
CALL 0x00102b87
ADD RSP,0x20
POP RBX
POP R12
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV qword ptr [RBP + -0x30],RCX
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RBP + -0x8],RAX
CMP qword ptr [RBP + -0x8],0x0
JLE 0x00102bcd
MOV RDX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x28]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001011f0
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,RDX
LEAVE
RET
ENDBR64
SUB RSP,0x8
ADD RSP,0x8
RET
