ENDBR64
SUB RSP,0x8
MOV RAX,qword ptr [0x00104fe8]
TEST RAX,RAX
JZ 0x00101016
CALL RAX
ADD RSP,0x8
RET
PUSH qword ptr [0x00104f50]
JMP qword ptr [0x00104f58]
ENDBR64
PUSH 0x0
JMP 0x00101020
NOP
ENDBR64
PUSH 0x1
JMP 0x00101020
NOP
ENDBR64
PUSH 0x2
JMP 0x00101020
NOP
ENDBR64
PUSH 0x3
JMP 0x00101020
NOP
ENDBR64
PUSH 0x4
JMP 0x00101020
NOP
ENDBR64
PUSH 0x5
JMP 0x00101020
NOP
ENDBR64
PUSH 0x6
JMP 0x00101020
NOP
ENDBR64
PUSH 0x7
JMP 0x00101020
NOP
ENDBR64
PUSH 0x8
JMP 0x00101020
NOP
ENDBR64
PUSH 0x9
JMP 0x00101020
NOP
ENDBR64
PUSH 0xa
JMP 0x00101020
NOP
ENDBR64
PUSH 0xb
JMP 0x00101020
NOP
ENDBR64
PUSH 0xc
JMP 0x00101020
NOP
ENDBR64
JMP qword ptr [0x00104fc8]
ENDBR64
JMP qword ptr [0x00104f60]
ENDBR64
JMP qword ptr [0x00104f68]
ENDBR64
JMP qword ptr [0x00104f70]
ENDBR64
JMP qword ptr [0x00104f78]
ENDBR64
JMP qword ptr [0x00104f80]
ENDBR64
JMP qword ptr [0x00104f88]
ENDBR64
JMP qword ptr [0x00104f90]
ENDBR64
JMP qword ptr [0x00104f98]
ENDBR64
JMP qword ptr [0x00104fa0]
ENDBR64
JMP qword ptr [0x00104fa8]
ENDBR64
JMP qword ptr [0x00104fb0]
ENDBR64
JMP qword ptr [0x00104fb8]
ENDBR64
JMP qword ptr [0x00104fc0]
ENDBR64
XOR EBP,EBP
MOV R9,RDX
POP RSI
MOV RDX,RSP
AND RSP,-0x10
PUSH RAX
PUSH RSP
XOR R8D,R8D
XOR ECX,ECX
LEA RDI,[0x1012f9]
CALL qword ptr [0x00104fd8]
HLT
LEA RDI,[0x105018]
LEA RAX,[0x105018]
CMP RAX,RDI
JZ 0x00101238
MOV RAX,qword ptr [0x00104fe0]
TEST RAX,RAX
JZ 0x00101238
JMP RAX
RET
LEA RDI,[0x105018]
LEA RSI,[0x105018]
SUB RSI,RDI
MOV RAX,RSI
SHR RSI,0x3f
SAR RAX,0x3
ADD RSI,RAX
SAR RSI,0x1
JZ 0x00101278
MOV RAX,qword ptr [0x00104ff0]
TEST RAX,RAX
JZ 0x00101278
JMP RAX
RET
ENDBR64
CMP byte ptr [0x00105150],0x0
JNZ 0x001012b8
PUSH RBP
CMP qword ptr [0x00104fc8],0x0
MOV RBP,RSP
JZ 0x001012a7
MOV RDI,qword ptr [0x00105008]
CALL 0x00101100
CALL 0x00101210
MOV byte ptr [0x00105150],0x1
POP RBP
RET
RET
ENDBR64
JMP 0x00101240
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV dword ptr [RBP + -0x4],EDI
MOV dword ptr [RBP + -0x8],ESI
MOV EAX,dword ptr [RBP + -0x4]
AND EAX,0x1
TEST EAX,EAX
JNZ 0x001012f2
MOV EAX,dword ptr [RBP + -0x8]
AND EAX,0x1
TEST EAX,EAX
JNZ 0x001012f2
MOV EAX,0x1
JMP 0x001012f7
MOV EAX,0x0
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R15
PUSH R14
PUSH R13
PUSH R12
PUSH RBX
SUB RSP,0xa8
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x38],RAX
XOR EAX,EAX
MOV dword ptr [RBP + -0x60],0x2
MOV dword ptr [RBP + -0x5c],0x3
MOV dword ptr [RBP + -0x58],0x4
MOV dword ptr [RBP + -0x54],0x5
MOV dword ptr [RBP + -0x50],0x6
LEA RAX,[RBP + -0x60]
MOV R14,RAX
MOV R15D,0x5
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x0010177e
LEA RDX,[RBP + -0x80]
MOV RSI,R14
MOV RDI,R15
MOV RCX,R14
MOV RBX,R15
MOV RDI,RBX
LEA RAX,[RBP + -0xa0]
MOV RCX,RDX
MOV RDX,RDI
MOV RDI,RAX
CALL 0x001017be
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x0010179e
MOV dword ptr [RBP + -0x60],0x2
MOV dword ptr [RBP + -0x5c],0x3
MOV dword ptr [RBP + -0x58],0x6
MOV dword ptr [RBP + -0x54],0x7
MOV dword ptr [RBP + -0x50],0x8
MOV dword ptr [RBP + -0x4c],0x9
MOV dword ptr [RBP + -0x48],0xa
LEA RAX,[RBP + -0x60]
MOV R12,RAX
MOV R13D,0x7
LEA RAX,[RBP + -0xb0]
MOV RDI,RAX
CALL 0x0010177e
LEA RDX,[RBP + -0xb0]
MOV RSI,R12
MOV RDI,R13
MOV RCX,R12
MOV RBX,R13
MOV RDI,RBX
LEA RAX,[RBP + -0x80]
MOV RCX,RDX
MOV RDX,RDI
MOV RDI,RAX
CALL 0x001017be
LEA RAX,[RBP + -0xb0]
MOV RDI,RAX
CALL 0x0010179e
MOV qword ptr [RBP + -0xd0],0x0
MOV qword ptr [RBP + -0xc8],0x0
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x001018b8
MOV R12,RAX
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101904
MOV RBX,RAX
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x001018b8
MOV RDX,R12
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00101954
MOV qword ptr [RBP + -0xc0],RAX
MOV qword ptr [RBP + -0xb8],RDX
LEA RDX,[RBP + -0xc0]
LEA RAX,[RBP + -0xd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010198a
LEA RAX,[0x10300c]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101150
MOV RBX,RAX
LEA RAX,[RBP + -0xd0]
MOV RDI,RAX
CALL 0x001019d6
MOV EAX,dword ptr [RAX]
MOV ESI,EAX
MOV RDI,RBX
CALL 0x001011c0
MOV RDX,qword ptr [0x00104fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101180
LEA RAX,[0x10301e]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101150
MOV RBX,RAX
LEA RAX,[RBP + -0xd0]
ADD RAX,0x8
MOV RDI,RAX
CALL 0x001019d6
MOV EAX,dword ptr [RAX]
MOV ESI,EAX
MOV RDI,RBX
CALL 0x001011c0
MOV RDX,qword ptr [0x00104fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101180
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x001018b8
MOV R12,RAX
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101904
MOV RBX,RAX
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x001018b8
MOV RDI,RAX
LEA RAX,[0x1012c9]
MOV RCX,RAX
MOV RDX,R12
MOV RSI,RBX
CALL 0x001019eb
MOV qword ptr [RBP + -0xb0],RAX
MOV qword ptr [RBP + -0xa8],RDX
LEA RDX,[RBP + -0xb0]
LEA RAX,[RBP + -0xd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010198a
LEA RAX,[0x10300c]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101150
MOV RBX,RAX
LEA RAX,[RBP + -0xd0]
MOV RDI,RAX
CALL 0x001019d6
MOV EAX,dword ptr [RAX]
MOV ESI,EAX
MOV RDI,RBX
CALL 0x001011c0
MOV RDX,qword ptr [0x00104fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101180
LEA RAX,[0x10301e]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101150
MOV RBX,RAX
LEA RAX,[RBP + -0xd0]
ADD RAX,0x8
MOV RDI,RAX
CALL 0x001019d6
MOV EAX,dword ptr [RAX]
MOV ESI,EAX
MOV RDI,RBX
CALL 0x001011c0
MOV RDX,qword ptr [0x00104fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101180
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x00101870
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101870
MOV EAX,0x0
MOV RDX,qword ptr [RBP + -0x38]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001016c3
JMP 0x001016be
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x0010179e
MOV RAX,RBX
MOV RDI,RAX
CALL 0x001011d0
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0xb0]
MOV RDI,RAX
CALL 0x0010179e
JMP 0x001016a4
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x00101870
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101870
MOV RAX,RBX
MOV RDI,RAX
CALL 0x001011d0
CALL 0x00101190
ADD RSP,0xa8
POP RBX
POP R12
POP R13
POP R14
POP R15
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],EDI
MOV dword ptr [RBP + -0x8],ESI
CMP dword ptr [RBP + -0x4],0x1
JNZ 0x00101728
CMP dword ptr [RBP + -0x8],0xffff
JNZ 0x00101728
LEA RAX,[0x105151]
MOV RDI,RAX
CALL 0x001011a0
LEA RAX,[0x105008]
MOV RDX,RAX
LEA RAX,[0x105151]
MOV RSI,RAX
MOV RAX,qword ptr [0x00104ff8]
MOV RDI,RAX
CALL 0x00101140
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV ESI,0xffff
MOV EDI,0x1
CALL 0x001016d5
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x00101778
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x0010177c
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a2c
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a3c
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x38
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,RSI
MOV RSI,RDX
MOV RDX,RSI
MOV qword ptr [RBP + -0x40],RAX
MOV qword ptr [RBP + -0x38],RDX
MOV qword ptr [RBP + -0x30],RCX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101a6c
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101afe
MOV RBX,RAX
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101ae8
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RBX
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101b6c
JMP 0x00101856
ENDBR64
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101a96
MOV RAX,RBX
MOV RDI,RAX
CALL 0x001011d0
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x0010186a
CALL 0x00101190
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101c20
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101c32
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a96
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101c60
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101902
CALL 0x00101190
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX + 0x8]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101c60
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101952
CALL 0x00101190
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
CALL 0x00101744
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101c81
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x00101d39
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV qword ptr [RDX],RAX
MOV RAX,qword ptr [RBP + -0x10]
ADD RAX,0x8
MOV RDI,RAX
CALL 0x00101d39
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV qword ptr [RDX + 0x8],RAX
MOV RAX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV qword ptr [RBP + -0x20],RCX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00101d4b
MOV RCX,RAX
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101da2
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010179e
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101e5e
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,RDX
SUB RAX,RCX
SAR RAX,0x2
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101e94
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a4c
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101ae8
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101ece
SHL RAX,0x2
ADD RAX,RBX
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
LEA RAX,[RBP + -0x8]
MOV RDI,RAX
CALL 0x00101ee4
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101ef2
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x38
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV qword ptr [RBP + -0x38],RDX
MOV RDX,qword ptr [RBP + -0x38]
MOV RAX,qword ptr [RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101b37
MOV qword ptr [RBP + -0x18],RAX
MOV RBX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101c20
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101f10
MOV RSI,RAX
MOV RDI,RBX
CALL 0x00101f98
MOV RDX,qword ptr [RBP + -0x28]
MOV qword ptr [RDX],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x18]
SHL RAX,0x2
ADD RDX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV qword ptr [RAX + 0x10],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101c20
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RAX]
MOV RSI,qword ptr [RBP + -0x38]
MOV RAX,qword ptr [RBP + -0x30]
MOV RDI,RAX
CALL 0x00101fcf
MOV RDX,qword ptr [RBP + -0x28]
MOV qword ptr [RDX + 0x8],RAX
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102004
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x40
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV qword ptr [RBP + -0x38],RDX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
JMP 0x00101cc2
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x001020ae
LEA RAX,[RBP + -0x38]
MOV RDI,RAX
CALL 0x001020ae
LEA RDX,[RBP + -0x30]
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010202e
TEST AL,AL
JZ 0x00101cfb
MOV RDX,qword ptr [RBP + -0x38]
MOV RCX,qword ptr [RBP + -0x28]
LEA RAX,[RBP + -0x39]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010206e
TEST AL,AL
JZ 0x00101cfb
MOV EAX,0x1
JMP 0x00101d00
MOV EAX,0x0
TEST AL,AL
JNZ 0x00101caa
LEA RDX,[RBP + -0x38]
LEA RCX,[RBP + -0x28]
LEA RAX,[RBP + -0x20]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001020d2
MOV RAX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x8]
SUB RCX,qword ptr FS:[0x28]
JZ 0x00101d37
CALL 0x00101190
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x18]
MOV RDI,RAX
CALL 0x0010211a
MOV RDX,qword ptr [RAX]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010212c
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101da0
CALL 0x00101190
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x40
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV qword ptr [RBP + -0x38],RDX
MOV qword ptr [RBP + -0x40],RCX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
JMP 0x00101de7
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x001020ae
LEA RAX,[RBP + -0x38]
MOV RDI,RAX
CALL 0x001020ae
LEA RDX,[RBP + -0x30]
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010202e
TEST AL,AL
JZ 0x00101e20
MOV RDX,qword ptr [RBP + -0x38]
MOV RCX,qword ptr [RBP + -0x28]
LEA RAX,[RBP + -0x40]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010215a
TEST AL,AL
JZ 0x00101e20
MOV EAX,0x1
JMP 0x00101e25
MOV EAX,0x0
TEST AL,AL
JNZ 0x00101dcf
LEA RDX,[RBP + -0x38]
LEA RCX,[RBP + -0x28]
LEA RAX,[RBP + -0x20]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001020d2
MOV RAX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x8]
SUB RCX,qword ptr FS:[0x28]
JZ 0x00101e5c
CALL 0x00101190
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001021a8
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001021d2
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
CMP qword ptr [RBP + -0x10],0x0
JZ 0x00101eca
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102204
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
SUB RAX,qword ptr [RBP + -0x8]
SAR RAX,0x2
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x30]
LEA RAX,[RBP + -0x19]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001021a8
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x00102236
CMP qword ptr [RBP + -0x28],RAX
SETA BL
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x0010179e
TEST BL,BL
JZ 0x00101f79
LEA RAX,[0x103038]
MOV RDI,RAX
CALL 0x00101120
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101f91
CALL 0x00101190
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
CMP qword ptr [RBP + -0x10],0x0
JZ 0x00101fc8
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010229f
JMP 0x00101fcd
MOV EAX,0x0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV qword ptr [RBP + -0x20],RCX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001022cd
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102302
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102316
MOV RBX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102316
MOV RAX,qword ptr [RAX]
CMP RBX,RAX
SETNZ AL
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x001019d6
MOV EBX,dword ptr [RAX]
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x001019d6
MOV EAX,dword ptr [RAX]
CMP EBX,EAX
SETZ AL
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
LEA RDX,[RAX + 0x4]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x00102328
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV qword ptr [RDX],RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102328
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV qword ptr [RDX + 0x8],RAX
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
LEA RAX,[RBP + -0x10]
MOV RDI,RAX
CALL 0x0010211a
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R12
PUSH RBX
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV R12,qword ptr [RAX]
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x001019d6
MOV EBX,dword ptr [RAX]
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x001019d6
MOV EAX,dword ptr [RAX]
MOV ESI,EBX
MOV EDI,EAX
CALL R12
ADD RSP,0x20
POP RBX
POP R12
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010233a
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x10],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010234e
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,0x1fffffffffffffff
MOV qword ptr [RBP + -0x18],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00102383
MOV qword ptr [RBP + -0x10],RAX
LEA RDX,[RBP + -0x10]
LEA RAX,[RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010174f
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x0010229d
CALL 0x00101190
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,0x0
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001023ba
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV byte ptr [RBP + -0x1],0x1
MOV RDX,qword ptr [RBP + -0x28]
MOV RCX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010241f
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX*0x4]
MOV RAX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101170
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102450
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,0x1fffffffffffffff
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001023a2
CMP qword ptr [RBP + -0x10],RAX
SETA AL
MOVZX EAX,AL
TEST RAX,RAX
SETNZ AL
TEST AL,AL
JZ 0x0010240c
MOV RAX,0x3fffffffffffffff
CMP qword ptr [RBP + -0x10],RAX
JBE 0x00102407
CALL 0x00101130
CALL 0x00101110
MOV RAX,qword ptr [RBP + -0x10]
SHL RAX,0x2
MOV RDI,RAX
CALL 0x00101160
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010246e
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001023a2
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x001024bd
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001024bd
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RAX
MOV RSI,RBX
MOV RDI,RCX
CALL 0x001024cf
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R12
PUSH RBX
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x0010254f
MOV R12,RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x0010253d
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x0010253d
MOV RDX,R12
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00102561
MOV RDX,RAX
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102592
ADD RSP,0x20
POP RBX
POP R12
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001025a8
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001025d9
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x18]
SAR RAX,0x2
MOV qword ptr [RBP + -0x8],RAX
CMP qword ptr [RBP + -0x8],0x0
JZ 0x00102627
MOV RAX,qword ptr [RBP + -0x8]
LEA RDX,[RAX*0x4]
MOV RCX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x28]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001011b0
MOV RAX,qword ptr [RBP + -0x8]
LEA RDX,[RAX*0x4]
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,RDX
LEAVE
RET
ENDBR64
SUB RSP,0x8
ADD RSP,0x8
RET
