ENDBR64
SUB RSP,0x8
MOV RAX,qword ptr [0x00103fe8]
TEST RAX,RAX
JZ 0x00101016
CALL RAX
ADD RSP,0x8
RET
PUSH qword ptr [0x00103f80]
JMP qword ptr [0x00103f88]
ENDBR64
PUSH 0x0
JMP 0x00101020
NOP
ENDBR64
PUSH 0x1
JMP 0x00101020
NOP
ENDBR64
PUSH 0x2
JMP 0x00101020
NOP
ENDBR64
PUSH 0x3
JMP 0x00101020
NOP
ENDBR64
PUSH 0x4
JMP 0x00101020
NOP
ENDBR64
PUSH 0x5
JMP 0x00101020
NOP
ENDBR64
PUSH 0x6
JMP 0x00101020
NOP
ENDBR64
JMP qword ptr [0x00103fc8]
ENDBR64
JMP qword ptr [0x00103f90]
ENDBR64
JMP qword ptr [0x00103f98]
ENDBR64
JMP qword ptr [0x00103fa0]
ENDBR64
JMP qword ptr [0x00103fa8]
ENDBR64
JMP qword ptr [0x00103fb0]
ENDBR64
JMP qword ptr [0x00103fb8]
ENDBR64
JMP qword ptr [0x00103fc0]
ENDBR64
XOR EBP,EBP
MOV R9,RDX
POP RSI
MOV RDX,RSP
AND RSP,-0x10
PUSH RAX
PUSH RSP
XOR R8D,R8D
XOR ECX,ECX
LEA RDI,[0x101209]
CALL qword ptr [0x00103fd8]
HLT
LEA RDI,[0x104010]
LEA RAX,[0x104010]
CMP RAX,RDI
JZ 0x00101178
MOV RAX,qword ptr [0x00103fe0]
TEST RAX,RAX
JZ 0x00101178
JMP RAX
RET
LEA RDI,[0x104010]
LEA RSI,[0x104010]
SUB RSI,RDI
MOV RAX,RSI
SHR RSI,0x3f
SAR RAX,0x3
ADD RSI,RAX
SAR RSI,0x1
JZ 0x001011b8
MOV RAX,qword ptr [0x00103ff0]
TEST RAX,RAX
JZ 0x001011b8
JMP RAX
RET
ENDBR64
CMP byte ptr [0x00104150],0x0
JNZ 0x001011f8
PUSH RBP
CMP qword ptr [0x00103fc8],0x0
MOV RBP,RSP
JZ 0x001011e7
MOV RDI,qword ptr [0x00104008]
CALL 0x001010a0
CALL 0x00101150
MOV byte ptr [0x00104150],0x1
POP RBP
RET
RET
ENDBR64
JMP 0x00101180
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x78
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x0010142c
LEA RAX,[RBP + -0x80]
MOV ESI,0x53
MOV RDI,RAX
CALL 0x00101446
LEA RAX,[RBP + -0x80]
MOV ESI,0x4b
MOV RDI,RAX
CALL 0x00101446
LEA RAX,[RBP + -0x80]
MOV ESI,0x49
MOV RDI,RAX
CALL 0x00101446
LEA RAX,[RBP + -0x80]
MOV ESI,0x49
MOV RDI,RAX
CALL 0x00101446
LEA RAX,[RBP + -0x80]
MOV ESI,0x50
MOV RDI,RAX
CALL 0x00101446
LEA RAX,[0x102010]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001010c0
MOV RBX,RAX
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x001014bc
MOVSX EAX,AL
MOV ESI,EAX
MOV RDI,RBX
CALL 0x001010f0
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001010d0
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x0010152e
MOV RDX,qword ptr [0x00102070]
LEA RAX,[RBP + -0x70]
MOVQ XMM0,RDX
MOV RDI,RAX
CALL 0x00101548
MOV RDX,qword ptr [0x00102078]
LEA RAX,[RBP + -0x70]
MOVQ XMM0,RDX
MOV RDI,RAX
CALL 0x00101548
MOV RDX,qword ptr [0x00102080]
LEA RAX,[RBP + -0x70]
MOVQ XMM0,RDX
MOV RDI,RAX
CALL 0x00101548
MOV RDX,qword ptr [0x00102088]
LEA RAX,[RBP + -0x70]
MOVQ XMM0,RDX
MOV RDI,RAX
CALL 0x00101548
MOV RDX,qword ptr [0x00102090]
LEA RAX,[RBP + -0x70]
MOVQ XMM0,RDX
MOV RDI,RAX
CALL 0x00101548
LEA RAX,[0x102030]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001010c0
MOV RBX,RAX
LEA RAX,[RBP + -0x70]
MOV RDI,RAX
CALL 0x001015c2
MOVQ RAX,XMM0
MOVQ XMM0,RAX
MOV RDI,RBX
CALL 0x00101110
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001010d0
MOV EAX,0x0
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001013b6
CALL 0x001010e0
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],EDI
MOV dword ptr [RBP + -0x8],ESI
CMP dword ptr [RBP + -0x4],0x1
JNZ 0x0010140f
CMP dword ptr [RBP + -0x8],0xffff
JNZ 0x0010140f
LEA RAX,[0x104151]
MOV RDI,RAX
CALL 0x00101100
LEA RAX,[0x104008]
MOV RDX,RAX
LEA RAX,[0x104151]
MOV RSI,RAX
MOV RAX,qword ptr [0x00103ff8]
MOV RDI,RAX
CALL 0x001010b0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV ESI,0xffff
MOV EDI,0x1
CALL 0x001013bc
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV dword ptr [RAX + 0xc],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV EAX,ESI
MOV byte ptr [RBP + -0xc],AL
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0xc]
CMP EAX,0xa
JNZ 0x00101494
LEA RAX,[0x10204f]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001010c0
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001010d0
JMP 0x001014b9
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0xc]
MOV RDX,qword ptr [RBP + -0x8]
CDQE
MOVZX ECX,byte ptr [RBP + -0xc]
MOV byte ptr [RDX + RAX*0x1],CL
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0xc]
LEA EDX,[RAX + 0x1]
MOV RAX,qword ptr [RBP + -0x8]
MOV dword ptr [RAX + 0xc],EDX
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0xc]
TEST EAX,EAX
JNZ 0x00101509
LEA RAX,[0x10205d]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001010c0
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001010d0
MOV EAX,0x0
JMP 0x0010152b
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0xc]
LEA EDX,[RAX + -0x1]
MOV RAX,qword ptr [RBP + -0x8]
MOV dword ptr [RAX + 0xc],EDX
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0xc]
MOV RDX,qword ptr [RBP + -0x8]
CDQE
MOVZX EAX,byte ptr [RDX + RAX*0x1]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV dword ptr [RAX + 0x50],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOVSD qword ptr [RBP + -0x10],XMM0
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0x50]
CMP EAX,0xa
JNZ 0x00101596
LEA RAX,[0x10204f]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001010c0
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001010d0
JMP 0x001015bf
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,dword ptr [RAX + 0x50]
MOV RAX,qword ptr [RBP + -0x8]
MOVSXD RDX,EDX
MOVSD XMM0,qword ptr [RBP + -0x10]
MOVSD qword ptr [RAX + RDX*0x8],XMM0
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0x50]
LEA EDX,[RAX + 0x1]
MOV RAX,qword ptr [RBP + -0x8]
MOV dword ptr [RAX + 0x50],EDX
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0x50]
TEST EAX,EAX
JNZ 0x0010160e
LEA RAX,[0x10205d]
MOV RSI,RAX
LEA RAX,[0x104040]
MOV RDI,RAX
CALL 0x001010c0
MOV RDX,qword ptr [0x00103fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001010d0
PXOR XMM0,XMM0
JMP 0x00101632
MOV RAX,qword ptr [RBP + -0x8]
MOV EAX,dword ptr [RAX + 0x50]
LEA EDX,[RAX + -0x1]
MOV RAX,qword ptr [RBP + -0x8]
MOV dword ptr [RAX + 0x50],EDX
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,dword ptr [RAX + 0x50]
MOV RAX,qword ptr [RBP + -0x8]
MOVSXD RDX,EDX
MOVSD XMM0,qword ptr [RAX + RDX*0x8]
MOVQ RAX,XMM0
MOVQ XMM0,RAX
LEAVE
RET
ENDBR64
SUB RSP,0x8
ADD RSP,0x8
RET
