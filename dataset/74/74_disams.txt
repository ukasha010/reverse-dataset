ENDBR64
SUB RSP,0x8
MOV RAX,qword ptr [0x00105fe8]
TEST RAX,RAX
JZ 0x00101016
CALL RAX
ADD RSP,0x8
RET
PUSH qword ptr [0x00105f28]
JMP qword ptr [0x00105f30]
ENDBR64
PUSH 0x0
JMP 0x00101020
NOP
ENDBR64
PUSH 0x1
JMP 0x00101020
NOP
ENDBR64
PUSH 0x2
JMP 0x00101020
NOP
ENDBR64
PUSH 0x3
JMP 0x00101020
NOP
ENDBR64
PUSH 0x4
JMP 0x00101020
NOP
ENDBR64
PUSH 0x5
JMP 0x00101020
NOP
ENDBR64
PUSH 0x6
JMP 0x00101020
NOP
ENDBR64
PUSH 0x7
JMP 0x00101020
NOP
ENDBR64
PUSH 0x8
JMP 0x00101020
NOP
ENDBR64
PUSH 0x9
JMP 0x00101020
NOP
ENDBR64
PUSH 0xa
JMP 0x00101020
NOP
ENDBR64
PUSH 0xb
JMP 0x00101020
NOP
ENDBR64
PUSH 0xc
JMP 0x00101020
NOP
ENDBR64
PUSH 0xd
JMP 0x00101020
NOP
ENDBR64
PUSH 0xe
JMP 0x00101020
NOP
ENDBR64
PUSH 0xf
JMP 0x00101020
NOP
ENDBR64
PUSH 0x10
JMP 0x00101020
NOP
ENDBR64
PUSH 0x11
JMP 0x00101020
NOP
ENDBR64
JMP qword ptr [0x00105fc8]
ENDBR64
JMP qword ptr [0x00105f38]
ENDBR64
JMP qword ptr [0x00105f40]
ENDBR64
JMP qword ptr [0x00105f48]
ENDBR64
JMP qword ptr [0x00105f50]
ENDBR64
JMP qword ptr [0x00105f58]
ENDBR64
JMP qword ptr [0x00105f60]
ENDBR64
JMP qword ptr [0x00105f68]
ENDBR64
JMP qword ptr [0x00105f70]
ENDBR64
JMP qword ptr [0x00105f78]
ENDBR64
JMP qword ptr [0x00105f80]
ENDBR64
JMP qword ptr [0x00105f88]
ENDBR64
JMP qword ptr [0x00105f90]
ENDBR64
JMP qword ptr [0x00105f98]
ENDBR64
JMP qword ptr [0x00105fa0]
ENDBR64
JMP qword ptr [0x00105fa8]
ENDBR64
JMP qword ptr [0x00105fb0]
ENDBR64
JMP qword ptr [0x00105fb8]
ENDBR64
JMP qword ptr [0x00105fc0]
ENDBR64
XOR EBP,EBP
MOV R9,RDX
POP RSI
MOV RDX,RSP
AND RSP,-0x10
PUSH RAX
PUSH RSP
XOR R8D,R8D
XOR ECX,ECX
LEA RDI,[0x101369]
CALL qword ptr [0x00105fd8]
HLT
LEA RDI,[0x106018]
LEA RAX,[0x106018]
CMP RAX,RDI
JZ 0x001012d8
MOV RAX,qword ptr [0x00105fe0]
TEST RAX,RAX
JZ 0x001012d8
JMP RAX
RET
LEA RDI,[0x106018]
LEA RSI,[0x106018]
SUB RSI,RDI
MOV RAX,RSI
SHR RSI,0x3f
SAR RAX,0x3
ADD RSI,RAX
SAR RSI,0x1
JZ 0x00101318
MOV RAX,qword ptr [0x00105ff0]
TEST RAX,RAX
JZ 0x00101318
JMP RAX
RET
ENDBR64
CMP byte ptr [0x00106150],0x0
JNZ 0x00101358
PUSH RBP
CMP qword ptr [0x00105fc8],0x0
MOV RBP,RSP
JZ 0x00101347
MOV RDI,qword ptr [0x00106008]
CALL 0x00101150
CALL 0x001012b0
MOV byte ptr [0x00106150],0x1
POP RBP
RET
RET
ENDBR64
JMP 0x001012e0
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R15
PUSH R14
PUSH R13
PUSH R12
PUSH RBX
SUB RSP,0x98
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x38],RAX
XOR EAX,EAX
MOV byte ptr [RBP + -0x40],0x61
MOV byte ptr [RBP + -0x3f],0x62
MOV byte ptr [RBP + -0x3e],0x62
MOV byte ptr [RBP + -0x3d],0x62
MOV byte ptr [RBP + -0x3c],0x64
MOV byte ptr [RBP + -0x3b],0x63
MOV byte ptr [RBP + -0x3a],0x63
MOV byte ptr [RBP + -0x39],0x65
LEA RAX,[RBP + -0x40]
MOV R14,RAX
MOV R15D,0x8
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101270
LEA RDX,[RBP + -0x60]
MOV RSI,R14
MOV RDI,R15
MOV RCX,R14
MOV RBX,R15
MOV RDI,RBX
LEA RAX,[RBP + -0xa0]
MOV RCX,RDX
MOV RDX,RDI
MOV RDI,RAX
CALL 0x001019a0
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101200
LEA RAX,[0x10300c]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011c0
MOV dword ptr [RBP + -0xb8],0x0
JMP 0x00101470
MOV EAX,dword ptr [RBP + -0xb8]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0xa0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101abe
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV ESI,EAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x00101220
MOV RDX,RAX
LEA RAX,[0x103018]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001011c0
ADD dword ptr [RBP + -0xb8],0x1
MOV EAX,dword ptr [RBP + -0xb8]
MOVSXD RBX,EAX
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101a9a
CMP RBX,RAX
SETC AL
TEST AL,AL
JNZ 0x00101422
MOV RAX,qword ptr [0x00105fd0]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011f0
MOV qword ptr [RBP + -0xb0],0x0
MOV qword ptr [RBP + -0xa8],0x0
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101b2a
MOV RBX,RAX
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101ade
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00101b7a
MOV qword ptr [RBP + -0xa8],RAX
LEA RAX,[0x10301a]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011c0
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101ade
MOV qword ptr [RBP + -0xb0],RAX
JMP 0x00101574
LEA RAX,[RBP + -0xb0]
MOV RDI,RAX
CALL 0x00101c4e
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV ESI,EAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x00101220
MOV RDX,RAX
LEA RAX,[0x103018]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001011c0
LEA RAX,[RBP + -0xb0]
MOV ESI,0x0
MOV RDI,RAX
CALL 0x00101be8
LEA RDX,[RBP + -0xa8]
LEA RAX,[RBP + -0xb0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101ba8
TEST AL,AL
JNZ 0x00101525
MOV RAX,qword ptr [0x00105fd0]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011f0
MOV byte ptr [RBP + -0x40],0x61
MOV byte ptr [RBP + -0x3f],0x62
MOV byte ptr [RBP + -0x3e],0x62
MOV byte ptr [RBP + -0x3d],0x62
MOV byte ptr [RBP + -0x3c],0x64
MOV byte ptr [RBP + -0x3b],0x63
MOV byte ptr [RBP + -0x3a],0x63
MOV byte ptr [RBP + -0x39],0x65
LEA RAX,[RBP + -0x40]
MOV R12,RAX
MOV R13D,0x8
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101270
LEA RDX,[RBP + -0x60]
MOV RSI,R12
MOV RDI,R13
MOV RCX,R12
MOV RBX,R13
MOV RDI,RBX
LEA RAX,[RBP + -0x80]
MOV RCX,RDX
MOV RDX,RDI
MOV RDI,RAX
CALL 0x001019a0
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101200
LEA RAX,[RBP + -0xb9]
MOV RDI,RAX
CALL 0x00101270
LEA RDX,[RBP + -0xb9]
LEA RAX,[RBP + -0x60]
MOV ESI,0x8
MOV RDI,RAX
CALL 0x00101c64
LEA RAX,[RBP + -0xb9]
MOV RDI,RAX
CALL 0x00101200
LEA RAX,[0x10302e]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011c0
MOV dword ptr [RBP + -0xb4],0x0
JMP 0x001016ba
MOV EAX,dword ptr [RBP + -0xb4]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0x80]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101abe
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV ESI,EAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x00101220
MOV RDX,RAX
LEA RAX,[0x103018]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001011c0
ADD dword ptr [RBP + -0xb4],0x1
MOV EAX,dword ptr [RBP + -0xb4]
MOVSXD RBX,EAX
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x00101a9a
CMP RBX,RAX
SETC AL
TEST AL,AL
JNZ 0x0010166f
MOV RAX,qword ptr [0x00105fd0]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011f0
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101ade
MOV R12,RAX
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x00101b2a
MOV RBX,RAX
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x00101ade
MOV RDX,R12
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00101ce2
MOV qword ptr [RBP + -0xa8],RAX
LEA RAX,[0x10303c]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011c0
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101ade
MOV qword ptr [RBP + -0xb0],RAX
JMP 0x001017ae
LEA RAX,[RBP + -0xb0]
MOV RDI,RAX
CALL 0x00101c4e
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV ESI,EAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x00101220
MOV RDX,RAX
LEA RAX,[0x103018]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001011c0
LEA RAX,[RBP + -0xb0]
MOV ESI,0x0
MOV RDI,RAX
CALL 0x00101be8
LEA RDX,[RBP + -0xa8]
LEA RAX,[RBP + -0xb0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101ba8
TEST AL,AL
JNZ 0x0010175f
MOV RAX,qword ptr [0x00105fd0]
MOV RSI,RAX
LEA RAX,[0x106040]
MOV RDI,RAX
CALL 0x001011f0
MOV EBX,0x0
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101a52
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x00101a52
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101a52
MOV EAX,EBX
MOV RDX,qword ptr [RBP + -0x38]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001018bc
JMP 0x001018b7
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101200
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101260
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101200
JMP 0x0010189d
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0xb9]
MOV RDI,RAX
CALL 0x00101200
JMP 0x00101888
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00101a52
LEA RAX,[RBP + -0x80]
MOV RDI,RAX
CALL 0x00101a52
JMP 0x0010189d
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0xa0]
MOV RDI,RAX
CALL 0x00101a52
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101260
CALL 0x00101210
ADD RSP,0x98
POP RBX
POP R12
POP R13
POP R14
POP R15
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],EDI
MOV dword ptr [RBP + -0x8],ESI
CMP dword ptr [RBP + -0x4],0x1
JNZ 0x00101921
CMP dword ptr [RBP + -0x8],0xffff
JNZ 0x00101921
LEA RAX,[0x106151]
MOV RDI,RAX
CALL 0x00101240
LEA RAX,[0x106008]
MOV RDX,RAX
LEA RAX,[0x106151]
MOV RSI,RAX
MOV RAX,qword ptr [0x00105ff8]
MOV RDI,RAX
CALL 0x001011b0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV ESI,0xffff
MOV EDI,0x1
CALL 0x001018ce
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x00101999
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x0010199d
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x38
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,RSI
MOV RSI,RDX
MOV RDX,RSI
MOV qword ptr [RBP + -0x40],RAX
MOV qword ptr [RBP + -0x38],RDX
MOV qword ptr [RBP + -0x30],RCX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101d92
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101e20
MOV RBX,RAX
LEA RAX,[RBP + -0x40]
MOV RDI,RAX
CALL 0x00101e0a
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RBX
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101e8a
JMP 0x00101a38
ENDBR64
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101dbc
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101260
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00101a4c
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101f3a
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101f4c
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101dbc
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,RDX
SUB RAX,RCX
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
ADD RAX,RDX
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101f7a
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101b28
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX + 0x8]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101f7a
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101b78
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
CALL 0x00101953
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101f9b
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001020a2
MOV RBX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x001020a2
MOV RAX,qword ptr [RAX]
CMP RBX,RAX
SETNZ AL
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV dword ptr [RBP + -0x2c],ESI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RAX]
LEA RCX,[RAX + 0x1]
MOV RDX,qword ptr [RBP + -0x28]
MOV qword ptr [RDX],RCX
MOV qword ptr [RBP + -0x18],RAX
LEA RDX,[RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101f7a
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101c4b
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RBX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001020b4
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RAX
MOV RSI,RCX
MOV RDI,RBX
CALL 0x0010213c
MOV RDX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001021a2
JMP 0x00101cdc
ENDBR64
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101dbc
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101260
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
LEA RDX,[RBP + -0x20]
LEA RAX,[RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001021e6
TEST AL,AL
JZ 0x00101d26
MOV RAX,qword ptr [RBP + -0x28]
JMP 0x00101d5b
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x00102225
LEA RAX,[RBP + -0x18]
MOV RDI,RAX
CALL 0x00102225
CALL 0x00101953
MOV RDX,qword ptr [RBP + -0x28]
MOV RCX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102233
NOP
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101d6f
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101160
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001022e6
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,RDX
SUB RAX,RCX
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010231c
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101d72
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101e0a
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102356
ADD RAX,RBX
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
LEA RAX,[RBP + -0x8]
MOV RDI,RAX
CALL 0x0010236c
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010237a
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x38
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV qword ptr [RBP + -0x38],RDX
MOV RDX,qword ptr [RBP + -0x38]
MOV RAX,qword ptr [RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101e55
MOV qword ptr [RBP + -0x18],RAX
MOV RBX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101f3a
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001020b4
MOV RSI,RAX
MOV RDI,RBX
CALL 0x00102394
MOV RDX,qword ptr [RBP + -0x28]
MOV qword ptr [RDX],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x18]
ADD RDX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV qword ptr [RAX + 0x10],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101f3a
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RAX]
MOV RSI,qword ptr [RBP + -0x38]
MOV RAX,qword ptr [RBP + -0x30]
MOV RDI,RAX
CALL 0x001023cb
MOV RDX,qword ptr [RBP + -0x28]
MOV qword ptr [RDX + 0x8],RAX
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102400
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x38
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x30]
MOV RAX,qword ptr [RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010242a
MOV qword ptr [RBP + -0x28],RAX
LEA RDX,[RBP + -0x30]
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001021e6
TEST AL,AL
JZ 0x00101ff6
MOV RAX,qword ptr [RBP + -0x30]
JMP 0x00102088
MOV RAX,qword ptr [RBP + -0x28]
MOV qword ptr [RBP + -0x20],RAX
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x001024da
JMP 0x00102057
MOV RDX,qword ptr [RBP + -0x28]
MOV RCX,qword ptr [RBP + -0x20]
LEA RAX,[RBP + -0x31]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001024fe
XOR EAX,0x1
TEST AL,AL
JZ 0x00102057
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x00101c4e
MOV RDI,RAX
CALL 0x00102540
MOVZX EBX,byte ptr [RAX]
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x001024da
MOV RDI,RAX
CALL 0x00101c4e
MOV byte ptr [RAX],BL
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x001024da
MOV RDX,RAX
LEA RAX,[RBP + -0x30]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x00101ba8
TEST AL,AL
JNZ 0x0010200c
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x001024da
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x0010209c
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x30]
LEA RAX,[RBP + -0x19]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011a0
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x00102552
CMP qword ptr [RBP + -0x28],RAX
SETA BL
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x00101200
TEST BL,BL
JZ 0x0010211d
LEA RAX,[0x103058]
MOV RDI,RAX
CALL 0x00101180
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00102135
CALL 0x00101210
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001022e6
MOV RDX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001025bc
JMP 0x0010219b
ENDBR64
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101d72
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101260
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101f3a
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV RCX,qword ptr [RBP + -0x10]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102612
MOV RDX,qword ptr [RBP + -0x8]
MOV qword ptr [RDX + 0x8],RAX
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001020a2
MOV RBX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x001020a2
MOV RAX,qword ptr [RAX]
CMP RBX,RAX
SETZ AL
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
LEA RAX,[RBP + -0x18]
MOV RDI,RAX
CALL 0x00101c4e
MOVZX EBX,byte ptr [RAX]
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x00101c4e
MOV byte ptr [RAX],BL
JMP 0x001022ae
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x28]
LEA RAX,[RBP + -0x29]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001024fe
XOR EAX,0x1
TEST AL,AL
JZ 0x001022ae
LEA RAX,[RBP + -0x18]
MOV RDI,RAX
CALL 0x00101c4e
MOVZX EBX,byte ptr [RAX]
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x001024da
MOV RDI,RAX
CALL 0x00101c4e
MOV byte ptr [RAX],BL
LEA RAX,[RBP + -0x18]
MOV RDI,RAX
CALL 0x001024da
MOV RDX,RAX
LEA RAX,[RBP + -0x20]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x00101ba8
TEST AL,AL
JNZ 0x0010226b
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x001024da
MOV RAX,qword ptr [RAX]
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101230
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102672
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
CMP qword ptr [RBP + -0x10],0x0
JZ 0x00102352
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010263f
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX + 0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
SUB RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
CMP qword ptr [RBP + -0x10],0x0
JZ 0x001023c4
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001026a4
JMP 0x001023c9
MOV EAX,0x0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV qword ptr [RBP + -0x20],RCX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001026d2
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102707
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
LEA RDX,[RBP + -0x20]
LEA RAX,[RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001021e6
TEST AL,AL
JZ 0x0010246a
MOV RAX,qword ptr [RBP + -0x20]
JMP 0x001024c3
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RBP + -0x10],RAX
JMP 0x0010249d
MOV RDX,qword ptr [RBP + -0x10]
MOV RCX,qword ptr [RBP + -0x18]
LEA RAX,[RBP + -0x21]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001024fe
TEST AL,AL
JZ 0x00102495
MOV RAX,qword ptr [RBP + -0x18]
JMP 0x001024c3
MOV RAX,qword ptr [RBP + -0x10]
MOV qword ptr [RBP + -0x18],RAX
LEA RAX,[RBP + -0x10]
MOV RDI,RAX
CALL 0x001024da
MOV RDX,RAX
LEA RAX,[RBP + -0x20]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x00101ba8
TEST AL,AL
JNZ 0x00102474
MOV RAX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001024d7
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
LEA RDX,[RAX + 0x1]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
LEA RAX,[RBP + -0x20]
MOV RDI,RAX
CALL 0x00101c4e
MOVZX EBX,byte ptr [RAX]
LEA RAX,[RBP + -0x28]
MOV RDI,RAX
CALL 0x00101c4e
MOVZX EAX,byte ptr [RAX]
CMP BL,AL
SETZ AL
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,0x7fffffffffffffff
MOV qword ptr [RBP + -0x18],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x0010271a
MOV qword ptr [RBP + -0x10],RAX
LEA RDX,[RBP + -0x10]
LEA RAX,[RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101970
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001025b9
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102394
MOV RDX,qword ptr [RBP + -0x8]
MOV qword ptr [RDX],RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
ADD RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x10],RDX
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102738
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102778
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x10],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,0x0
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001027be
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV byte ptr [RBP + -0x1],0x1
MOV RDX,qword ptr [RBP + -0x28]
MOV RCX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010280a
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010283c
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV byte ptr [RBP + -0x1],0x1
MOV RDX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010285a
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011e0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,0x7fffffffffffffff
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001027a6
CMP qword ptr [RBP + -0x10],RAX
SETA AL
MOVZX EAX,AL
TEST RAX,RAX
SETNZ AL
TEST AL,AL
JZ 0x001027fb
CALL 0x00101170
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x001011d0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001028c9
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001027a6
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
CMP qword ptr [RBP + -0x20],0x0
JZ 0x001028b5
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102765
MOV qword ptr [RBP + -0x8],RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102918
ADD qword ptr [RBP + -0x18],0x1
MOV RAX,qword ptr [RBP + -0x20]
LEA RCX,[RAX + -0x1]
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010293f
MOV qword ptr [RBP + -0x18],RAX
MOV RAX,qword ptr [RBP + -0x18]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102987
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102987
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RAX
MOV RSI,RBX
MOV RDI,RCX
CALL 0x00102999
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RAX
MOV EDI,0x1
CALL 0x0010193d
MOV byte ptr [RAX],0x0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
LEA RAX,[RBP + -0x8]
MOV RDI,RAX
CALL 0x001028bb
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x0010195e
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102a07
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R12
PUSH RBX
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00102a6a
MOV R12,RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102a58
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102a58
MOV RDX,R12
MOV RSI,RBX
MOV RDI,RAX
CALL 0x00102a7c
MOV RDX,RAX
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102aad
ADD RSP,0x20
POP RBX
POP R12
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
CMP qword ptr [RBP + -0x10],0x0
JNZ 0x00102a2c
MOV RAX,qword ptr [RBP + -0x8]
JMP 0x00102a56
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x10]
LEA RCX,[RDX + RAX*0x1]
MOV RDX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102ac3
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x10]
ADD RAX,RDX
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102af5
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102b26
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102b77
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOVZX EAX,byte ptr [RAX]
MOV byte ptr [RBP + -0x9],AL
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RBP + -0x8],RAX
CMP qword ptr [RBP + -0x8],0x0
JZ 0x00102b74
MOVZX EAX,byte ptr [RBP + -0x9]
MOVZX ECX,AL
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x18]
MOV ESI,ECX
MOV RDI,RAX
CALL 0x00101190
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RBP + -0x8],RAX
CMP qword ptr [RBP + -0x8],0x0
JZ 0x00102bb9
MOV RDX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x28]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101250
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,RDX
LEAVE
RET
ENDBR64
SUB RSP,0x8
ADD RSP,0x8
RET
