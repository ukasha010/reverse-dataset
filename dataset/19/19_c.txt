
int _init(EVP_PKEY_CTX *ctx)

{
  undefined *puVar1;
  
  puVar1 = PTR___gmon_start___00103fe8;
  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {
    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();
  }
  return (int)puVar1;
}



void FUN_00101020(void)

{
  (*(code *)PTR_00103f88)();
  return;
}



void __cxa_finalize(void)

{
  (*(code *)PTR___cxa_finalize_00103fc8)();
  return;
}





size_t strlen(char *__s)

{
  size_t sVar1;
  
  sVar1 = (*(code *)PTR_strlen_00103f90)();
  return sVar1;
}



void __cxa_atexit(void)

{
  (*(code *)PTR___cxa_atexit_00103f98)();
  return;
}





basic_ostream * std::operator<<(basic_ostream *param_1,char *param_2)

{
  basic_ostream *pbVar1;
  
  pbVar1 = (basic_ostream *)(*(code *)PTR_operator<<_00103fa0)();
  return pbVar1;
}



void __thiscall
std::basic_ostream<char,std::char_traits<char>>::operator<<
          (basic_ostream<char,std::char_traits<char>> *this,
          _func_basic_ostream_ptr_basic_ostream_ptr *param_1)

{
  (*(code *)PTR_operator<<_00103fa8)();
  return;
}



void __stack_chk_fail(void)

{
  (*(code *)PTR___stack_chk_fail_00103fb0)();
  return;
}



void __thiscall std::ios_base::Init::Init(Init *this)

{
  (*(code *)PTR_Init_00103fb8)();
  return;
}





char * strcat(char *__dest,char *__src)

{
  char *pcVar1;
  
  pcVar1 = (char *)(*(code *)PTR_strcat_00103fc0)();
  return pcVar1;
}



void processEntry _start(undefined8 param_1,undefined8 param_2)

{
  undefined auStack_8 [8];
  
  (*(code *)PTR___libc_start_main_00103fd8)(main,param_2,&stack0x00000008,0,0,param_1,auStack_8);
  do {
                    
  } while( true );
}






void deregister_tm_clones(void)

{
  return;
}






void register_tm_clones(void)

{
  return;
}



void __do_global_dtors_aux(void)

{
  if (completed_0 == '\0') {
    if (PTR___cxa_finalize_00103fc8 != (undefined *)0x0) {
      __cxa_finalize(__dso_handle);
    }
    deregister_tm_clones();
    completed_0 = 1;
    return;
  }
  return;
}



void frame_dummy(void)

{
  register_tm_clones();
  return;
}



undefined8 main(void)

{
  basic_ostream *pbVar1;
  size_t sVar2;
  long in_FS_OFFSET;
  int local_108;
  int local_104;
  undefined4 local_fd;
  undefined2 local_f9;
  undefined local_f7;
  undefined8 local_f6;
  undefined4 local_ee;
  undefined2 local_ea;
  undefined8 local_e8;
  undefined8 local_e0;
  undefined8 local_d8;
  undefined8 local_d0;
  undefined8 local_c8;
  undefined8 local_c0;
  undefined8 local_b8;
  undefined8 local_b0;
  undefined8 local_a8;
  undefined8 local_a0;
  undefined8 local_98;
  undefined8 local_90;
  undefined4 local_88;
  undefined8 local_78;
  undefined8 local_70;
  undefined8 local_68;
  undefined8 local_60;
  undefined8 local_58;
  undefined8 local_50;
  undefined8 local_48;
  undefined8 local_40;
  undefined8 local_38;
  undefined8 local_30;
  undefined8 local_28;
  undefined8 local_20;
  undefined4 local_18;
  long local_10;
  
  local_10 = *(long *)(in_FS_OFFSET + 0x28);
  local_e8 = 0x6e7265737520794d;
  local_e0 = 0x20736920656d61;
  local_d8 = 0;
  local_d0 = 0;
  local_c8 = 0;
  local_c0 = 0;
  local_b8 = 0;
  local_b0 = 0;
  local_a8 = 0;
  local_a0 = 0;
  local_98 = 0;
  local_90 = 0;
  local_88 = 0;
  local_f6 = 0x6a7261686b617270;
  local_ee = 0x75616461;
  local_ea = 0x6e;
  strcat((char *)&local_e8,(char *)&local_f6);
  pbVar1 = std::operator<<((basic_ostream *)std::cout,"After concatenation : \n");
  pbVar1 = std::operator<<(pbVar1,(char *)&local_e8);
  std::basic_ostream<char,std::char_traits<char>>::operator<<
            ((basic_ostream<char,std::char_traits<char>> *)pbVar1,
             (_func_basic_ostream_ptr_basic_ostream_ptr *)
             PTR_endl<char,std_char_traits<char>>_00103fd0);
  local_78 = 0x20756f7920657241;
  local_70 = 0;
  local_68 = 0;
  local_60 = 0;
  local_58 = 0;
  local_50 = 0;
  local_48 = 0;
  local_40 = 0;
  local_38 = 0;
  local_30 = 0;
  local_28 = 0;
  local_20 = 0;
  local_18 = 0;
  local_fd = 0x2164616d;
  local_f9 = 0x3f3f;
  local_f7 = 0;
  sVar2 = strlen((char *)&local_78);
  local_108 = (int)sVar2;
  for (local_104 = 0; *(char *)((long)&local_fd + (long)local_104) != '\0';
      local_104 = local_104 + 1) {
    *(undefined *)((long)&local_78 + (long)local_108) =
         *(undefined *)((long)&local_fd + (long)local_104);
    local_108 = local_108 + 1;
  }
  *(undefined *)((long)&local_78 + (long)local_108) = 0;
  pbVar1 = std::operator<<((basic_ostream *)std::cout,"Without strcat() : ");
  pbVar1 = std::operator<<(pbVar1,(char *)&local_78);
  std::basic_ostream<char,std::char_traits<char>>::operator<<
            ((basic_ostream<char,std::char_traits<char>> *)pbVar1,
             (_func_basic_ostream_ptr_basic_ostream_ptr *)
             PTR_endl<char,std_char_traits<char>>_00103fd0);
  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {
                    
    __stack_chk_fail();
  }
  return 0;
}





void __static_initialization_and_destruction_0(int param_1,int param_2)

{
  if ((param_1 == 1) && (param_2 == 0xffff)) {
    std::ios_base::Init::Init((Init *)&std::__ioinit);
    __cxa_atexit(PTR__Init_00103ff8,&std::__ioinit,&__dso_handle);
  }
  return;
}



void _GLOBAL__sub_I_main(void)

{
  __static_initialization_and_destruction_0(1,0xffff);
  return;
}



void _fini(void)

{
  return;
}






size_t strlen(char *__s)

{
                    
                    
  halt_baddata();
}






basic_ostream * std::endl<char,std::char_traits<char>>(basic_ostream *param_1)

{
                    
                    
  halt_baddata();
}





void __libc_start_main(void)

{
                    
                    
  halt_baddata();
}





void __cxa_atexit(void)

{
                    
                    
  halt_baddata();
}






basic_ostream * std::operator<<(basic_ostream *param_1,char *param_2)

{
                    
                    
  halt_baddata();
}





void __thiscall
std::basic_ostream<char,std::char_traits<char>>::operator<<
          (basic_ostream<char,std::char_traits<char>> *this,
          _func_basic_ostream_ptr_basic_ostream_ptr *param_1)

{
                    
                    
  halt_baddata();
}





void __stack_chk_fail(void)

{
                    
                    
  halt_baddata();
}





void __thiscall std::ios_base::Init::Init(Init *this)

{
                    
                    
  halt_baddata();
}





void _ITM_deregisterTMCloneTable(void)

{
                    
  halt_baddata();
}






char * strcat(char *__dest,char *__src)

{
                    
                    
  halt_baddata();
}





void __gmon_start__(void)

{
                    
  halt_baddata();
}





void _ITM_registerTMCloneTable(void)

{
                    
  halt_baddata();
}





void __thiscall std::ios_base::Init::~Init(Init *this)

{
                    
                    
  halt_baddata();
}





void __cxa_finalize(void)

{
                    
                    
  halt_baddata();
}


