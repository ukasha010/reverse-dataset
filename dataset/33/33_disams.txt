ENDBR64
SUB RSP,0x8
MOV RAX,qword ptr [0x00104fe8]
TEST RAX,RAX
JZ 0x00101016
CALL RAX
ADD RSP,0x8
RET
PUSH qword ptr [0x00104f18]
JMP qword ptr [0x00104f20]
ENDBR64
PUSH 0x0
JMP 0x00101020
NOP
ENDBR64
PUSH 0x1
JMP 0x00101020
NOP
ENDBR64
PUSH 0x2
JMP 0x00101020
NOP
ENDBR64
PUSH 0x3
JMP 0x00101020
NOP
ENDBR64
PUSH 0x4
JMP 0x00101020
NOP
ENDBR64
PUSH 0x5
JMP 0x00101020
NOP
ENDBR64
PUSH 0x6
JMP 0x00101020
NOP
ENDBR64
PUSH 0x7
JMP 0x00101020
NOP
ENDBR64
PUSH 0x8
JMP 0x00101020
NOP
ENDBR64
PUSH 0x9
JMP 0x00101020
NOP
ENDBR64
PUSH 0xa
JMP 0x00101020
NOP
ENDBR64
PUSH 0xb
JMP 0x00101020
NOP
ENDBR64
PUSH 0xc
JMP 0x00101020
NOP
ENDBR64
PUSH 0xd
JMP 0x00101020
NOP
ENDBR64
PUSH 0xe
JMP 0x00101020
NOP
ENDBR64
PUSH 0xf
JMP 0x00101020
NOP
ENDBR64
PUSH 0x10
JMP 0x00101020
NOP
ENDBR64
PUSH 0x11
JMP 0x00101020
NOP
ENDBR64
PUSH 0x12
JMP 0x00101020
NOP
ENDBR64
PUSH 0x13
JMP 0x00101020
NOP
ENDBR64
JMP qword ptr [0x00104fc8]
ENDBR64
JMP qword ptr [0x00104f28]
ENDBR64
JMP qword ptr [0x00104f30]
ENDBR64
JMP qword ptr [0x00104f38]
ENDBR64
JMP qword ptr [0x00104f40]
ENDBR64
JMP qword ptr [0x00104f48]
ENDBR64
JMP qword ptr [0x00104f50]
ENDBR64
JMP qword ptr [0x00104f58]
ENDBR64
JMP qword ptr [0x00104f60]
ENDBR64
JMP qword ptr [0x00104f68]
ENDBR64
JMP qword ptr [0x00104f70]
ENDBR64
JMP qword ptr [0x00104f78]
ENDBR64
JMP qword ptr [0x00104f80]
ENDBR64
JMP qword ptr [0x00104f88]
ENDBR64
JMP qword ptr [0x00104f90]
ENDBR64
JMP qword ptr [0x00104f98]
ENDBR64
JMP qword ptr [0x00104fa0]
ENDBR64
JMP qword ptr [0x00104fa8]
ENDBR64
JMP qword ptr [0x00104fb0]
ENDBR64
JMP qword ptr [0x00104fb8]
ENDBR64
JMP qword ptr [0x00104fc0]
ENDBR64
XOR EBP,EBP
MOV R9,RDX
POP RSI
MOV RDX,RSP
AND RSP,-0x10
PUSH RAX
PUSH RSP
XOR R8D,R8D
XOR ECX,ECX
LEA RDI,[0x1013a9]
CALL qword ptr [0x00104fd8]
HLT
LEA RDI,[0x105018]
LEA RAX,[0x105018]
CMP RAX,RDI
JZ 0x00101318
MOV RAX,qword ptr [0x00104fe0]
TEST RAX,RAX
JZ 0x00101318
JMP RAX
RET
LEA RDI,[0x105018]
LEA RSI,[0x105018]
SUB RSI,RDI
MOV RAX,RSI
SHR RSI,0x3f
SAR RAX,0x3
ADD RSI,RAX
SAR RSI,0x1
JZ 0x00101358
MOV RAX,qword ptr [0x00104ff0]
TEST RAX,RAX
JZ 0x00101358
JMP RAX
RET
ENDBR64
CMP byte ptr [0x00105150],0x0
JNZ 0x00101398
PUSH RBP
CMP qword ptr [0x00104fc8],0x0
MOV RBP,RSP
JZ 0x00101387
MOV RDI,qword ptr [0x00105008]
CALL 0x00101170
CALL 0x001012f0
MOV byte ptr [0x00105150],0x1
POP RBP
RET
RET
ENDBR64
JMP 0x00101320
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x48
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
LEA RAX,[RBP + -0x49]
MOV RDI,RAX
CALL 0x001012a0
LEA RDX,[RBP + -0x49]
LEA RAX,[RBP + -0x30]
MOV ESI,0x5
MOV RDI,RAX
CALL 0x001017e8
LEA RAX,[RBP + -0x49]
MOV RDI,RAX
CALL 0x00101230
LEA RAX,[0x103008]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x001011f0
MOV RBX,RAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x001018ae
MOV RSI,RAX
MOV RDI,RBX
CALL 0x00101190
MOV RDX,qword ptr [0x00104fd0]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101220
MOV dword ptr [RBP + -0x48],0x0
JMP 0x00101463
MOV EAX,dword ptr [RBP + -0x48]
ADD EAX,0x61
MOV EBX,EAX
MOV EAX,dword ptr [RBP + -0x48]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018d2
MOV byte ptr [RAX],BL
ADD dword ptr [RBP + -0x48],0x1
MOV EAX,dword ptr [RBP + -0x48]
MOVSXD RBX,EAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x001018ae
CMP RBX,RAX
SETC AL
TEST AL,AL
JNZ 0x00101440
LEA RAX,[0x10301e]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x001011f0
MOV dword ptr [RBP + -0x44],0x0
JMP 0x001014e6
MOV EAX,dword ptr [RBP + -0x44]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018d2
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV ESI,EAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101250
MOV RDX,RAX
LEA RAX,[0x103028]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001011f0
ADD dword ptr [RBP + -0x44],0x1
MOV EAX,dword ptr [RBP + -0x44]
MOVSXD RBX,EAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x001018ae
CMP RBX,RAX
SETC AL
TEST AL,AL
JNZ 0x001014a1
MOV RAX,qword ptr [0x00104fd0]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101220
MOV dword ptr [RBP + -0x40],0x0
JMP 0x00101544
MOV EAX,dword ptr [RBP + -0x40]
ADD EAX,0x66
MOV byte ptr [RBP + -0x49],AL
LEA RDX,[RBP + -0x49]
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018f2
ADD dword ptr [RBP + -0x40],0x1
CMP dword ptr [RBP + -0x40],0x9
JLE 0x00101524
LEA RAX,[0x10301e]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x001011f0
MOV dword ptr [RBP + -0x3c],0x0
JMP 0x001015b1
MOV EAX,dword ptr [RBP + -0x3c]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018d2
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV ESI,EAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101250
MOV RDX,RAX
LEA RAX,[0x103028]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001011f0
ADD dword ptr [RBP + -0x3c],0x1
MOV EAX,dword ptr [RBP + -0x3c]
MOVSXD RBX,EAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x001018ae
CMP RBX,RAX
SETC AL
TEST AL,AL
JNZ 0x0010156c
MOV RAX,qword ptr [0x00104fd0]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101220
MOV dword ptr [RBP + -0x38],0x0
JMP 0x0010162e
MOV EAX,dword ptr [RBP + -0x38]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018d2
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV EDI,EAX
CALL 0x001012b0
MOV EBX,EAX
MOV EAX,dword ptr [RBP + -0x38]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018d2
MOV byte ptr [RAX],BL
ADD dword ptr [RBP + -0x38],0x1
MOV EAX,dword ptr [RBP + -0x38]
MOVSXD RBX,EAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x001018ae
CMP RBX,RAX
SETC AL
TEST AL,AL
JNZ 0x001015ef
LEA RAX,[0x10301e]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x001011f0
MOV dword ptr [RBP + -0x34],0x0
JMP 0x001016b1
MOV EAX,dword ptr [RBP + -0x34]
MOVSXD RDX,EAX
LEA RAX,[RBP + -0x30]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001018d2
MOVZX EAX,byte ptr [RAX]
MOVSX EAX,AL
MOV ESI,EAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101250
MOV RDX,RAX
LEA RAX,[0x103028]
MOV RSI,RAX
MOV RDI,RDX
CALL 0x001011f0
ADD dword ptr [RBP + -0x34],0x1
MOV EAX,dword ptr [RBP + -0x34]
MOVSXD RBX,EAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x001018ae
CMP RBX,RAX
SETC AL
TEST AL,AL
JNZ 0x0010166c
MOV RAX,qword ptr [0x00104fd0]
MOV RSI,RAX
LEA RAX,[0x105040]
MOV RDI,RAX
CALL 0x00101220
MOV EBX,0x0
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x00101866
MOV EAX,EBX
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x0010174b
JMP 0x00101746
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x49]
MOV RDI,RAX
CALL 0x00101230
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101290
ENDBR64
MOV RBX,RAX
LEA RAX,[RBP + -0x30]
MOV RDI,RAX
CALL 0x00101866
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101290
CALL 0x00101240
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV dword ptr [RBP + -0x4],EDI
MOV dword ptr [RBP + -0x8],ESI
CMP dword ptr [RBP + -0x4],0x1
JNZ 0x001017a4
CMP dword ptr [RBP + -0x8],0xffff
JNZ 0x001017a4
LEA RAX,[0x105151]
MOV RDI,RAX
CALL 0x00101270
LEA RAX,[0x105008]
MOV RDX,RAX
LEA RAX,[0x105151]
MOV RSI,RAX
MOV RAX,qword ptr [0x00104ff8]
MOV RDI,RAX
CALL 0x001011e0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV ESI,0xffff
MOV EDI,0x1
CALL 0x00101751
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RBX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x20]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101927
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,RAX
MOV RSI,RCX
MOV RDI,RBX
CALL 0x001019ce
MOV RDX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101a82
JMP 0x00101860
ENDBR64
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101a34
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101290
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101ac6
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101ad8
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101a34
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,RDX
SUB RAX,RCX
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
ADD RAX,RDX
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x00101b06
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101b18
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x30]
LEA RAX,[RBP + -0x19]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001011d0
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x00101bc0
CMP qword ptr [RBP + -0x28],RAX
SETA BL
LEA RAX,[RBP + -0x19]
MOV RDI,RAX
CALL 0x00101230
TEST BL,BL
JZ 0x00101990
LEA RAX,[0x103030]
MOV RDI,RAX
CALL 0x001011b0
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001019a8
CALL 0x00101240
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101180
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101c2a
MOV RDX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101c60
JMP 0x00101a2d
ENDBR64
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001019ae
MOV RAX,RBX
MOV RDI,RAX
CALL 0x00101290
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX + 0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,RDX
SUB RAX,RCX
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101cb6
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001019ae
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00101ac6
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
MOV RCX,qword ptr [RBP + -0x10]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101cef
MOV RDX,qword ptr [RBP + -0x8]
MOV qword ptr [RDX + 0x8],RAX
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101d1c
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RAX + 0x10]
CMP RDX,RAX
JZ 0x00101b7e
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00101d46
MOV RDX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RAX + 0x8]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101d58
MOV RAX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RAX + 0x8]
LEA RDX,[RAX + 0x1]
MOV RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RAX + 0x8],RDX
JMP 0x00101bae
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00101d46
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101d96
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDX,RBX
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101de6
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101f8c
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,0x7fffffffffffffff
MOV qword ptr [RBP + -0x18],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00102024
MOV qword ptr [RBP + -0x10],RAX
LEA RDX,[RBP + -0x10]
LEA RAX,[RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102042
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101c27
CALL 0x00101240
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101260
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102072
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001020a4
MOV RDX,qword ptr [RBP + -0x8]
MOV qword ptr [RDX],RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
ADD RDX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x10],RDX
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
CMP qword ptr [RBP + -0x10],0x0
JZ 0x00101cec
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101ff2
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001020db
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RDX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00102108
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00101d46
MOV RDX,RAX
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010211c
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x18]
LEA RDX,[RAX + 0x8]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010215e
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101de4
CALL 0x00101240
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x68
MOV qword ptr [RBP + -0x58],RDI
MOV qword ptr [RBP + -0x60],RSI
MOV qword ptr [RBP + -0x68],RDX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x58]
LEA RDX,[0x103061]
MOV ESI,0x1
MOV RDI,RAX
CALL 0x00102180
MOV qword ptr [RBP + -0x48],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RAX,qword ptr [RAX]
MOV qword ptr [RBP + -0x40],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RAX,qword ptr [RAX + 0x8]
MOV qword ptr [RBP + -0x38],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RDI,RAX
CALL 0x00102270
MOV qword ptr [RBP + -0x50],RAX
LEA RDX,[RBP + -0x50]
LEA RAX,[RBP + -0x60]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001022bc
MOV qword ptr [RBP + -0x30],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RBP + -0x48]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001020a4
MOV qword ptr [RBP + -0x28],RAX
MOV RAX,qword ptr [RBP + -0x28]
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x68]
MOV RDI,RAX
CALL 0x00101d46
MOV RDX,RAX
MOV RCX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x30]
ADD RCX,RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101d58
MOV qword ptr [RBP + -0x20],0x0
MOV RAX,qword ptr [RBP + -0x58]
MOV RDI,RAX
CALL 0x00101ac6
MOV RBX,RAX
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00102332
MOV RSI,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x40]
MOV RCX,RBX
MOV RDI,RAX
CALL 0x001022fb
MOV qword ptr [RBP + -0x20],RAX
ADD qword ptr [RBP + -0x20],0x1
MOV RAX,qword ptr [RBP + -0x58]
MOV RDI,RAX
CALL 0x00101ac6
MOV RBX,RAX
LEA RAX,[RBP + -0x60]
MOV RDI,RAX
CALL 0x00102332
MOV RAX,qword ptr [RAX]
MOV RDX,qword ptr [RBP + -0x20]
MOV RSI,qword ptr [RBP + -0x38]
MOV RCX,RBX
MOV RDI,RAX
CALL 0x001022fb
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RDX + 0x10]
SUB RDX,qword ptr [RBP + -0x40]
MOV RCX,qword ptr [RBP + -0x40]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101cb6
MOV RAX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RBP + -0x28]
MOV qword ptr [RAX],RDX
MOV RAX,qword ptr [RBP + -0x58]
MOV RDX,qword ptr [RBP + -0x20]
MOV qword ptr [RAX + 0x8],RDX
MOV RDX,qword ptr [RBP + -0x28]
MOV RAX,qword ptr [RBP + -0x48]
ADD RDX,RAX
MOV RAX,qword ptr [RBP + -0x58]
MOV qword ptr [RAX + 0x10],RDX
NOP
MOV RAX,qword ptr [RBP + -0x18]
SUB RAX,qword ptr FS:[0x28]
JZ 0x00101f85
CALL 0x00101240
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101d96
MOV qword ptr [RBP + -0x18],RAX
LEA RAX,[RBP + -0x18]
MOV ESI,0x1
MOV RDI,RAX
CALL 0x00102344
MOV qword ptr [RBP + -0x10],RAX
LEA RAX,[RBP + -0x10]
MOV RDI,RAX
CALL 0x001023aa
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00101ff0
CALL 0x00101240
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001023d2
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102400
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x0010206b
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x0010206f
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x8],0x0
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX + 0x10],0x0
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
CMP qword ptr [RBP + -0x10],0x0
JZ 0x001020d4
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010241e
JMP 0x001020d9
MOV EAX,0x0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV byte ptr [RBP + -0x1],0x1
MOV RDX,qword ptr [RBP + -0x20]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010244c
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x28
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x00101d46
MOVZX EBX,byte ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RSI,RAX
MOV EDI,0x1
CALL 0x001017c0
MOV byte ptr [RAX],BL
NOP
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x8]
MOV qword ptr [RAX],RDX
NOP
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x48
MOV qword ptr [RBP + -0x38],RDI
MOV qword ptr [RBP + -0x40],RSI
MOV qword ptr [RBP + -0x48],RDX
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x18],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x001024ae
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x001018ae
SUB RBX,RAX
MOV RDX,RBX
MOV RAX,qword ptr [RBP + -0x40]
CMP RDX,RAX
SETC AL
TEST AL,AL
JZ 0x001021e3
MOV RAX,qword ptr [RBP + -0x48]
MOV RDI,RAX
CALL 0x001011b0
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x001018ae
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x001018ae
MOV qword ptr [RBP + -0x28],RAX
LEA RDX,[RBP + -0x40]
LEA RAX,[RBP + -0x28]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x001024d4
MOV RAX,qword ptr [RAX]
ADD RAX,RBX
MOV qword ptr [RBP + -0x20],RAX
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x001018ae
CMP qword ptr [RBP + -0x20],RAX
JC 0x00102243
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x001024ae
CMP qword ptr [RBP + -0x20],RAX
JBE 0x00102251
MOV RAX,qword ptr [RBP + -0x38]
MOV RDI,RAX
CALL 0x001024ae
JMP 0x00102255
MOV RAX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x18]
SUB RDX,qword ptr FS:[0x28]
JZ 0x00102269
CALL 0x00101240
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RDX,qword ptr [RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010215e
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001022ba
CALL 0x00101240
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH RBX
SUB RSP,0x18
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x00102332
MOV RBX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x00102332
MOV RDX,qword ptr [RAX]
MOV RAX,RBX
SUB RAX,RDX
MOV RBX,qword ptr [RBP + -0x8]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV qword ptr [RBP + -0x20],RCX
MOV RCX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102503
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x28],RDI
MOV qword ptr [RBP + -0x30],RSI
MOV RAX,qword ptr FS:[0x28]
MOV qword ptr [RBP + -0x8],RAX
XOR EAX,EAX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x30]
NEG RAX
ADD RAX,RDX
MOV qword ptr [RBP + -0x18],RAX
LEA RDX,[RBP + -0x18]
LEA RAX,[RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x0010215e
MOV RAX,qword ptr [RBP + -0x10]
MOV RDX,qword ptr [RBP + -0x8]
SUB RDX,qword ptr FS:[0x28]
JZ 0x001023a7
CALL 0x00101240
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RAX]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x10]
MOV RSI,RDX
MOV RDI,RAX
CALL 0x00101210
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102548
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV EDX,0x0
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102560
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
CMP qword ptr [RBP + -0x20],0x0
JZ 0x001024a7
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001023bf
MOV qword ptr [RBP + -0x8],RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x001025ac
ADD qword ptr [RBP + -0x18],0x1
MOV RAX,qword ptr [RBP + -0x20]
LEA RCX,[RAX + -0x1]
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x001025d3
MOV qword ptr [RBP + -0x18],RAX
MOV RAX,qword ptr [RBP + -0x18]
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010261c
MOV RDI,RAX
CALL 0x00101bc0
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RAX]
MOV RAX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RAX]
CMP RDX,RAX
JNC 0x001024fd
MOV RAX,qword ptr [RBP + -0x10]
JMP 0x00102501
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV qword ptr [RBP + -0x20],RCX
MOV RCX,qword ptr [RBP + -0x20]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x0010262e
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,0x7fffffffffffffff
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDI,RAX
CALL 0x00102548
CMP qword ptr [RBP + -0x10],RAX
SETA AL
MOVZX EAX,AL
TEST RAX,RAX
SETNZ AL
TEST AL,AL
JZ 0x0010259d
CALL 0x001011a0
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x00101200
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x10
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RAX
MOV EDI,0x1
CALL 0x001017c0
MOV byte ptr [RAX],0x0
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
LEA RAX,[RBP + -0x8]
MOV RDI,RAX
CALL 0x00102539
MOV RAX,qword ptr [RBP + -0x10]
MOV RDI,RAX
CALL 0x001017d6
MOV RCX,RAX
MOV RAX,qword ptr [RBP + -0x8]
MOV RDX,qword ptr [RBP + -0x18]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00102695
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
PUSH R12
PUSH RBX
SUB RSP,0x20
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV qword ptr [RBP + -0x30],RCX
MOV RAX,qword ptr [RBP + -0x28]
MOV RDI,RAX
CALL 0x001026e6
MOV R12,RAX
MOV RAX,qword ptr [RBP + -0x20]
MOV RDI,RAX
CALL 0x001026e6
MOV RBX,RAX
MOV RAX,qword ptr [RBP + -0x18]
MOV RDI,RAX
CALL 0x001026e6
MOV RDI,RAX
MOV RAX,qword ptr [RBP + -0x30]
MOV RCX,RAX
MOV RDX,R12
MOV RSI,RBX
CALL 0x001026f8
ADD RSP,0x20
POP RBX
POP R12
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
CMP qword ptr [RBP + -0x10],0x0
JNZ 0x001026ba
MOV RAX,qword ptr [RBP + -0x8]
JMP 0x001026e4
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x10]
LEA RCX,[RDX + RAX*0x1]
MOV RDX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010274b
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x10]
ADD RAX,RDX
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
MOV qword ptr [RBP + -0x8],RDI
MOV RAX,qword ptr [RBP + -0x8]
POP RBP
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV qword ptr [RBP + -0x30],RCX
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RBP + -0x8],RAX
CMP qword ptr [RBP + -0x8],0x0
JLE 0x0010273e
MOV RDX,qword ptr [RBP + -0x8]
MOV RCX,qword ptr [RBP + -0x18]
MOV RAX,qword ptr [RBP + -0x28]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x00101280
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x28]
ADD RAX,RDX
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x20
MOV qword ptr [RBP + -0x8],RDI
MOV qword ptr [RBP + -0x10],RSI
MOV qword ptr [RBP + -0x18],RDX
MOV RDX,qword ptr [RBP + -0x18]
MOV RCX,qword ptr [RBP + -0x10]
MOV RAX,qword ptr [RBP + -0x8]
MOV RSI,RCX
MOV RDI,RAX
CALL 0x0010277d
NOP
LEAVE
RET
ENDBR64
PUSH RBP
MOV RBP,RSP
SUB RSP,0x30
MOV qword ptr [RBP + -0x18],RDI
MOV qword ptr [RBP + -0x20],RSI
MOV qword ptr [RBP + -0x28],RDX
MOV RAX,qword ptr [RBP + -0x28]
MOVZX EAX,byte ptr [RAX]
MOV byte ptr [RBP + -0x9],AL
MOV RAX,qword ptr [RBP + -0x20]
SUB RAX,qword ptr [RBP + -0x18]
MOV qword ptr [RBP + -0x8],RAX
CMP qword ptr [RBP + -0x8],0x0
JZ 0x001027cb
MOVZX EAX,byte ptr [RBP + -0x9]
MOVZX ECX,AL
MOV RDX,qword ptr [RBP + -0x8]
MOV RAX,qword ptr [RBP + -0x18]
MOV ESI,ECX
MOV RDI,RAX
CALL 0x001011c0
NOP
LEAVE
RET
ENDBR64
SUB RSP,0x8
ADD RSP,0x8
RET
